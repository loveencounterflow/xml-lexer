{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\n\n\nEventEmitter = require('eventemitter3')\n{ isa\n  validate\n  type_of }               = ( new ( require 'intertype' ).Intertype() ).export()\n\nstate_data              = 'state_data'\nstate_cdata             = 'state_cdata'\nstate_tag_begin         = 'state_tag_begin'\nstate_tagname           = 'state_tagname'\nstate_tag_end           = 'state_tag_end'\nstate_atrname_start     = 'state_atrname_start'\nstate_atrname           = 'state_atrname'\nstate_atrname_end       = 'state_atrname_end'\nstate_atrvalue_begin    = 'state_atrvalue_begin'\nstate_atrvalue          = 'state_atrvalue'\naction_lt               = 'action_lt'\naction_gt               = 'action_gt'\naction_space            = 'action_space'\naction_equal            = 'action_equal'\naction_quote            = 'action_quote'\naction_slash            = 'action_slash'\naction_chr              = 'action_chr'\naction_error            = 'action_error'\ntype_text               = 'text'\ntype_open               = 'open'\ntype_close              = 'close'\ntype_atrname            = 'atrname'\ntype_atrvalue           = 'atrvalue'\n#...........................................................................................................\ntype_noop               = 'noop'\ntype_info               = 'info'\n# type_sot                = 'sot' # Start Of Text\n\nactions_by_chrs =\n  ' ':                    action_space\n  '\\t':                   action_space\n  '\\n':                   action_space\n  '\\r':                   action_space\n  '<':                    action_lt\n  '>':                    action_gt\n  '\"':                    action_quote\n  \"'\":                    action_quote\n  '=':                    action_equal\n  '/':                    action_slash\n\n#-----------------------------------------------------------------------------------------------------------\ncreate = ( settings, handler ) ->\n  switch arity = arguments.length\n    when 0 then null\n    when 1 then [ settings, handler, ] = [ null, settings, ]\n    when 2 then null\n    else throw new Error \"^55563^ expected 1 or 2 arguments, got #{arity}\"\n  [ settings, handler, ] = [ handler, null, ] unless isa.function handler\n  ### TAINT validate.xmllexer_settings settings ? {} ###\n  ### TAINT validate.function handler ###\n  defaults          =\n    include_specials:   false\n    emit_info:          false\n    emit_noop:          false\n  settings          = { defaults..., settings..., }\n  lexer             = new EventEmitter()\n\n  #---------------------------------------------------------------------------------------------------------\n  # Registers\n  #---------------------------------------------------------------------------------------------------------\n  ρ =\n    state:          state_data\n    data:           ''\n    tagname:        ''\n    atrname:        ''\n    atrvalue:       ''\n    is_closing:     false\n    prv_quote:      ''\n    txtl:           null # first index of current or most recent text ('data' or 'cdata') stretch\n    tagl:           null # first index of current or most recent tag\n    tagr:           null # last index of current or most recent tag\n\n  #---------------------------------------------------------------------------------------------------------\n  step = ( src, idx, chr ) =>\n    if settings.debug then console.log ρ.state, chr\n    actions = lexer.stateMachine[ ρ.state ]\n    action  = actions[ actions_by_chrs[ chr ] ? action_chr ] ? actions[ action_error ] ? actions[ action_chr ]\n    action src, idx, chr\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.write = ( src ) =>\n    for idx in [ 0 ... src.length ]\n      step src, idx, src[ idx ]\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.flush = =>\n\n  #---------------------------------------------------------------------------------------------------------\n  emit = ( ref, src, idx, type, value ) =>\n    # sigil = null\n    # # tags like: '?xml', '!DOCTYPE', comments\n    return null if ( type is type_noop ) and ( not settings.emit_noop )\n    return null if ( type is type_info ) and ( not settings.emit_info )\n    unless settings.include_specials\n      return null if ρ.tagname[ 0 ] in '!?'\n      return null if type is type_noop\n    # switch sigil = ρ.tagname[ 0 ]\n    #   when '?' then type = ''\n    #   when '!' then type = 'declaration'\n    # event.sigil = sigil if sigil?\n    event = { ref, type, value }\n    registers = {}\n    for k, v of ρ\n      registers[ k ] = v unless v in [ undefined, '', false, ]\n    if handler?\n      $key = \"^xmlxr:#{type}\"\n      handler { $key, type, value, idx, txtl: ρ.txtl, tagl: ρ.tagl, tagr: ρ.tagr, ρ: registers, ref, }\n    else\n      lexer.emit 'data', { type, value, }\n\n  lexer.stateMachine =\n\n    #-------------------------------------------------------------------------------------------------------\n    state_data:\n      #.....................................................................................................\n      action_lt: ( src, idx, chr ) =>\n        emit '^d1+^', src, idx, type_info, chr\n        if ρ.data.trim().length > 0\n          emit '^d2^', src, idx, type_text, ρ.data\n        ρ.tagl        = idx\n        ρ.tagname     = ''\n        ρ.is_closing  = false\n        ρ.state       = state_tag_begin\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d3+^', src, idx, type_info, chr\n        if ρ.data is ''\n          ρ.txtl = idx\n        ρ.data += chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_cdata:\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d4+^', src, idx, type_info, chr\n        if ρ.data is ''\n          ρ.txtl = idx\n        ρ.data += chr\n        if ( ( ρ.data.substr -3 ) is ']]>' )\n          emit '^d5^', src, idx, type_text, ρ.data.slice 0, -3\n          ρ.data  = ''\n          ρ.state = state_data\n        return null\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tag_begin:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d6+^', src, idx, type_info, chr\n        emit '^d7^', src, idx, type_noop, chr\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d8+^', src, idx, type_info, chr\n        ρ.tagname = chr\n        ρ.state   = state_tagname\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d9+^', src, idx, type_info, chr\n        ρ.tagname   = ''\n        ρ.is_closing = true\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tagname:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d10+^', src, idx, type_info, chr\n        if ρ.is_closing\n          ρ.state = state_tag_end\n        else\n          ρ.state = state_atrname_start\n          emit '^d11^', src, idx, type_open, ρ.tagname\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d12+^', src, idx, type_info, chr\n        if ρ.is_closing\n          ρ.tagr = idx + 1\n          emit '^d13^', src, idx, type_close, ρ.tagname\n        else\n          emit '^d14^', src, idx, type_open, ρ.tagname\n        ρ.data  = '';\n        ρ.state = state_data;\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d15+^', src, idx, type_info, chr\n        ρ.state = state_tag_end\n        emit '^d16^', src, idx, type_open, ρ.tagname\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d17+^', src, idx, type_info, chr\n        ρ.tagname += chr\n        if ρ.tagname is '![CDATA['\n          ρ.state   = state_cdata\n          ρ.data    = ''\n          ρ.tagname = ''\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tag_end:\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d18+^', src, idx, type_info, chr\n        emit '^d19^', src, idx, type_close, ρ.tagname\n        ρ.data  = ''\n        ρ.state = state_data\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d20+^', src, idx, type_info, chr\n        emit '^d21^', src, idx, type_noop, chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname_start:\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d22+^', src, idx, type_info, chr\n        ρ.atrname  = chr\n        ρ.state     = state_atrname\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d23+^', src, idx, type_info, chr\n        ρ.data = ''\n        ρ.state = state_data\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d24+^', src, idx, type_info, chr\n        emit '^d25^', src, idx, type_noop, chr\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d26+^', src, idx, type_info, chr\n        ρ.is_closing = true\n        ρ.state     = state_tag_end\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d27+^', src, idx, type_info, chr\n        ρ.state = state_atrname_end\n      #.....................................................................................................\n      action_equal: ( src, idx, chr ) =>\n        emit '^d28+^', src, idx, type_info, chr\n        emit '^d29^', src, idx, type_atrname, ρ.atrname\n        ρ.state = state_atrvalue_begin\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d30+^', src, idx, type_info, chr\n        ρ.atrvalue = ''\n        emit '^d31^', src, idx, type_atrname, ρ.atrname\n        emit '^d32^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.data      = ''\n        ρ.state     = state_data\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d33+^', src, idx, type_info, chr\n        ρ.is_closing = true\n        ρ.atrvalue = ''\n        emit '^d34^', src, idx, type_atrname, ρ.atrname\n        emit '^d35^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.state = state_tag_end\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d36+^', src, idx, type_info, chr\n        ρ.atrname += chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname_end:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d37+^', src, idx, type_info, chr\n        emit '^d38^', src, idx, type_noop, chr\n      #.....................................................................................................\n      action_equal: ( src, idx, chr ) =>\n        emit '^d39+^', src, idx, type_info, chr\n        emit '^d40^', src, idx, type_atrname, ρ.atrname\n        ρ.state = state_atrvalue_begin\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d41+^', src, idx, type_info, chr\n        ρ.atrvalue = ''\n        emit '^d42^', src, idx, type_atrname, ρ.atrname\n        emit '^d43^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.data      = ''\n        ρ.state     = state_data\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d44+^', src, idx, type_info, chr\n        ρ.atrvalue = ''\n        emit '^d45^', src, idx, type_atrname, ρ.atrname\n        emit '^d46^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.atrname  = chr\n        ρ.state     = state_atrname\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrvalue_begin:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d47+^', src, idx, type_info, chr\n        emit '^d48^', src, idx, type_noop, chr\n      #.....................................................................................................\n      action_quote: ( src, idx, chr ) =>\n        emit '^d49+^', src, idx, type_info, chr\n        ρ.prv_quote  = chr\n        ρ.atrvalue     = ''\n        ρ.state         = state_atrvalue\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d50+^', src, idx, type_info, chr\n        ρ.atrvalue     = ''\n        emit '^d51^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.data          = ''\n        ρ.state         = state_data\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d52+^', src, idx, type_info, chr\n        ρ.prv_quote     = ''\n        ρ.atrvalue      = chr\n        ρ.state         = state_atrvalue\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrvalue:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d53+^', src, idx, type_info, chr\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^d54^', src, idx, type_atrvalue, ρ.atrvalue\n          ρ.state = state_atrname_start\n      #.....................................................................................................\n      action_quote: ( src, idx, chr ) =>\n        emit '^d55+^', src, idx, type_info, chr\n        if chr is ρ.prv_quote\n          emit '^d56^', src, idx, type_atrvalue, ρ.atrvalue\n          ρ.state = state_atrname_start\n        else\n          ρ.atrvalue += chr\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d57+^', src, idx, type_info, chr\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^d58^', src, idx, type_atrvalue, ρ.atrvalue\n          ρ.data  = ''\n          ρ.state = state_data\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d59+^', src, idx, type_info, chr\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^d60^', src, idx, type_atrvalue, ρ.atrvalue\n          ρ.is_closing = true\n          ρ.state     = state_tag_end\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d61+^', src, idx, type_info, chr\n        ρ.atrvalue += chr\n\n  #---------------------------------------------------------------------------------------------------------\n  return lexer\n\n\nmodule.exports = {\n  state_data\n  state_cdata\n  state_tag_begin\n  state_tagname\n  state_tag_end\n  state_atrname_start\n  state_atrname\n  state_atrname_end\n  state_atrvalue_begin\n  state_atrvalue\n  action_lt\n  action_gt\n  action_space\n  action_equal\n  action_quote\n  action_slash\n  action_chr\n  action_error\n  type_text\n  type_open\n  type_close\n  type_atrname\n  type_atrvalue\n  type_noop\n  create }\n\n\n\n\n"
  ]
}