{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;EAGA;AAHA,MAAA,GAAA,EAAA,KAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,SAAA,EAAA,SAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,eAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,YAAA,EAAA,aAAA,EAAA,UAAA,EAAA,eAAA,EAAA,YAAA,EAAA,eAAA,EAAA,SAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,SAAA,EAAA,cAAA,EAAA,eAAA,EAAA,aAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,SAAA,EAAA,GAAA,EAAA,MAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,cAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,aAAA,EAAA,UAAA,EAAA,eAAA,EAAA,aAAA,EAAA,aAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA,EAAA,UAAA;IAAA,oBAAA;;;EAMA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAjB5B;;;EAmBA,CAAA,CAAE,MAAF,EACE,EADF,CAAA,GAC4B,GAD5B,EAnBA;;;EAsBA,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,OAAR,CAAF,CAAmB,CAAC,KAAxB,CAA8B;IAAE,KAAA,EAAO;EAAT,CAA9B;;EAC5B,CAAA,CAAE,SAAF,EACE,UADF,EAEE,IAFF,EAGE,MAHF,EAIE,MAJF,CAAA,GAI4B,KAAK,CAAC,MAAN,CAAA,CAJ5B;;EAOA,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,CAAA,GAE4B,CAAE,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA,CAAF,CAA2C,CAAC,MAA5C,CAAA,CAF5B;;EAIA,UAAA,GAA0B;;EAC1B,WAAA,GAA0B;;EAC1B,aAAA,GAA0B;;EAC1B,eAAA,GAA0B;;EAC1B,aAAA,GAA0B;;EAC1B,aAAA,GAA0B;;EAC1B,mBAAA,GAA0B;;EAC1B,aAAA,GAA0B;;EAC1B,iBAAA,GAA0B;;EAC1B,oBAAA,GAA0B;;EAC1B,cAAA,GAA0B;;EAC1B,SAAA,GAA0B;;EAC1B,SAAA,GAA0B;;EAC1B,YAAA,GAA0B;;EAC1B,YAAA,GAA0B;;EAC1B,YAAA,GAA0B;;EAC1B,YAAA,GAA0B;;EAC1B,UAAA,GAA0B;;EAC1B,YAAA,GAA0B;;EAC1B,SAAA,GAA0B;;EAC1B,SAAA,GAA0B;;EAC1B,eAAA,GAA0B;;EAC1B,cAAA,GAA0B;;EAC1B,UAAA,GAA0B;;EAC1B,eAAA,GAA0B;;EAC1B,YAAA,GAA0B;;EAC1B,YAAA,GAA0B;;EAC1B,aAAA,GAA0B;;EAC1B,eAAA,GAA0B;;EAC1B,aAAA,GAA0B;;EAC1B,mBAAA,GAA0B;;EAC1B,kBAAA,GAA0B,gBAjE1B;;;EAmEA,SAAA,GAA0B;;EAC1B,SAAA,GAA0B,OApE1B;;;EAuEA,eAAA,GACE;IAAA,GAAA,EAAwB,YAAxB;IACA,IAAA,EAAwB,YADxB;IAEA,IAAA,EAAwB,YAFxB;IAGA,IAAA,EAAwB,YAHxB;IAIA,GAAA,EAAwB,SAJxB;IAKA,GAAA,EAAwB,SALxB;IAMA,GAAA,EAAwB,YANxB;IAOA,GAAA,EAAwB,YAPxB;IAQA,GAAA,EAAwB,YARxB;IASA,GAAA,EAAwB;EATxB,EAxEF;;;EAoFA,MAAA,GAAS,QAAA,CAAE,QAAF,EAAY,OAAZ,CAAA,EAAA;;;AACT,QAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA;AAAE,YAAO,KAAA,GAAQ,SAAS,CAAC,MAAzB;AAAA,WACO,CADP;QACc;AAAP;AADP,WAEO,CAFP;QAEc,CAAE,QAAF,EAAY,OAAZ,CAAA,GAAyB,CAAE,IAAF,EAAQ,QAAR;AAAhC;AAFP,WAGO,CAHP;QAGc;AAAP;AAHP;QAIO,MAAM,IAAI,KAAJ,CAAU,CAAA,uCAAA,CAAA,CAA0C,KAA1C,CAAA,CAAV;AAJb;IAKA,KAAmD,GAAG,CAAC,QAAJ,CAAa,OAAb,CAAnD;MAAA,CAAE,QAAF,EAAY,OAAZ,CAAA,GAAyB,CAAE,OAAF,EAAW,IAAX,EAAzB;;IAGA,QAAA,GACE;MAAA,gBAAA,EAAoB,KAApB;MACA,SAAA,EAAoB,KADpB;MAEA,SAAA,EAAoB;IAFpB;IAGF,QAAA,GAAoB,CAAE,GAAA,QAAF,EAAe,GAAA,QAAf;IACpB,KAAA,GAAoB,CAAA,EAbtB;;;;IAkBE,CAAA,GACE;MAAA,KAAA,EAAgB,UAAhB;MACA,IAAA,EAAgB,EADhB;MAEA,OAAA,EAAgB,EAFhB;MAGA,OAAA,EAAgB,EAHhB;MAIA,QAAA,EAAgB,EAJhB;MAKA,UAAA,EAAgB,KALhB;MAMA,SAAA,EAAgB,EANhB;MAOA,SAAA,EAAgB,KAPhB;MAQA,IAAA,EAAgB,IARhB;MASA,IAAA,EAAgB,IAThB;MAUA,IAAA,EAAgB,IAVhB;MAWA,IAAA,EAAgB,IAXhB;MAYA,WAAA,EAAgB,KAZhB;MAaA,GAAA,EAAgB,IAbhB;MAcA,OAAA,EAAgB;IAdhB,EAnBJ;;IAqCE,IAAA,GAAO,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;AACT,UAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA;MAAI,IAAG,QAAQ,CAAC,KAAZ;QAAuB,OAAO,CAAC,GAAR,CAAY,CAAC,CAAC,KAAd,EAAqB,GAArB,EAAvB;;MACA,OAAA,GAAU,KAAK,CAAC,YAAY,CAAE,CAAC,CAAC,KAAJ;MAC5B,MAAA,gJAAqF,OAAO,CAAE,UAAF;MAC5F,MAAA,CAAO,GAAP,EAAY,GAAZ;AACA,aAAO;IALF,EArCT;;IA6CE,KAAK,CAAC,KAAN,GAAc,CAAE,GAAF,CAAA,GAAA;AAChB,UAAA,CAAA,EAAA,GAAA,EAAA;MAAI,CAAC,CAAC,OAAF,GAAY;MACZ,CAAC,CAAC,GAAF,GAAY;MACZ,KAAW,8FAAX;QACE,IAAA,CAAK,GAAL,EAAU,GAAG,CAAE,GAAF,CAAb;MADF;AAEA,aAAO;IALK,EA7ChB;;IAqDE,KAAK,CAAC,KAAN,GAAc,CAAA,CAAA,GAAA;AAChB,UAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA;MAGI,MAAmB,CAAC,CAAC,OAAF,GAAY,CAAC,CAAC,GAAG,CAAC,MAAN,GAAe,EAA9C;;;;AAAA,eAAO,KAAP;;MACA,GAAA,GAAM,CAAC,CAAC,GAAG,CAAC,MAAN,GAAe;AACrB,cAAO,CAAC,CAAC,KAAT;AAAA,aACO,oBADP;AAAA,aAC6B,cAD7B;UAEI,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,aAAlB,EAAwC,CAAC,CAAC,QAA1C;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,eAAlB,sCAAsD,EAAtD;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,kBAAlB,EAAwC,EAAxC;AAHyB;AAD7B,aAKO,aALP;UAMI,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,YAAlB,sCAAsD,EAAtD;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,aAAlB,uCAAsD,EAAtD;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,eAAlB,sCAAsD,EAAtD;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,kBAAlB,EAAwC,EAAxC;AAJG;AALP,aAUO,mBAVP;AAAA,aAU4B,aAV5B;UAWI,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,sCAAsD,EAAtD;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,eAAlB,sCAAsD,EAAtD;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,kBAAlB,EAAwC,EAAxC;AAHwB;AAV5B,aAcO,eAdP;UAeI,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAAwC,EAAxC;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,eAAnB,EAAwC,EAAxC;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,kBAAnB,EAAwC,EAAxC;AAHG;AAdP,aAkBO,UAlBP;UAmBI,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,mCAAsD,EAAtD;UACA,IAA8C,CAAC,CAAC,IAAI,CAAC,QAAP,CAAgB,GAAhB,CAA9C;YAAA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,eAAnB,EAAwC,EAAxC,EAAA;;AAFG;AAlBP,aAqBO,WArBP;UAsBI,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,mCAAsD,EAAtD;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,kBAAnB,EAAwC,EAAxC;AAFG;AArBP,aAwBO,aAxBP;UAyBI,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAAwC,MAAA,GAAS,kCAAW,EAAX,CAAjD;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,kBAAnB,EAAwC,EAAxC;AAFG;AAxBP;UA2BO,MAAM,IAAI,KAAJ,CAAU,CAAA,yCAAA,CAAA,CAA4C,CAAC,CAAC,KAA9C,CAAA,CAAV;AA3Bb;AA4BA,aAAO;IAlCK,EArDhB;;IA0FE,IAAA,GAAO,CAAE,GAAF,EAAO,GAAP,EAAY,IAAZ,EAAkB,IAAlB,CAAA,GAAA;AACT,UAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA;MAEI,IAAuB,SAAU,aAAV,SAAqB,SAA5C;;;QAAA,CAAC,CAAC,OAAF,GAAY,IAAZ;;MACA,IAAe,CAAE,IAAA,KAAQ,SAAV,CAAA,IAA0B,CAAE,CAAI,QAAQ,CAAC,SAAf,CAAzC;AAAA,eAAO,KAAP;;MACA,IAAe,CAAE,IAAA,KAAQ,SAAV,CAAA,IAA0B,CAAE,CAAI,QAAQ,CAAC,SAAf,CAAzC;AAAA,eAAO,KAAP;;MACA,KAAO,QAAQ,CAAC,gBAAhB;QACE,WAAe,CAAC,CAAC,OAAO,CAAE,CAAF,gBAAS,MAAlB,UAAf;AAAA,iBAAO,KAAP;;QACA,IAAe,IAAA,KAAQ,SAAvB;AAAA,iBAAO,KAAP;SAFF;;MAGA,CAAA,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,EAA0B,SAA1B,CAAA,GAAyC,CAAzC;MACA,IAAA,GAA8B;MAC9B,OAAA,CAAQ,SAAA,CAAU,MAAV,EAAkB;QAAE,IAAF;QAAQ,IAAR;QAAc,IAAd;QAAoB,IAApB;QAA0B,IAA1B;QAAgC,IAAhC;QAAsC,IAAtC;QAA4C,SAA5C;QAAuD,CAAA,EAAG;MAA1D,CAAlB,CAAR;AACA,aAAO;IAZF;IAcP,KAAK,CAAC,YAAN,GAGE,CAAA;;MAAA,UAAA,EAEE,CAAA;;QAAA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,IAAI,CAAC,MAAP,GAAgB,CAAnB;YACE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,CAAC,CAAC,IAAhC,EADF;;UAEA,CAAC,CAAC,IAAF,GAAgB;UAChB,CAAC,CAAC,OAAF,GAAgB;UAChB,CAAC,CAAC,UAAF,GAAgB;iBAChB,CAAC,CAAC,KAAF,GAAgB;QAPP,CAAX;;QASA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,IAAF,KAAU,EAAb;YACE,CAAC,CAAC,IAAF,GAAS,IADX;;iBAEA,CAAC,CAAC,IAAF,IAAU;QAJA;MATZ,CAFF;;MAkBA,WAAA,EAEE,CAAA;;QAAA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,IAAF,KAAU,EAAb;YACE,CAAC,CAAC,IAAF,GAAS,IADX;;UAEA,CAAC,CAAC,IAAF,IAAU;UACV,IAAK,CAAE,CAAC,CAAC,IAAI,CAAC,MAAP,CAAc,CAAC,CAAf,CAAF,CAAA,KAAwB,KAA7B;YACE,CAAC,CAAC,IAAF,GAAS,GAAA,GAAM;YACf,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAAoC,CAAC,CAAC,IAAI,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAApC;YACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,eAAnB,EAAoC,CAAC,CAAC,IAAI,CAAC,KAAP,CAAa,CAAC,CAAd,CAApC;YACA,CAAC,CAAC,IAAF,GAAU;YACV,CAAC,CAAC,KAAF,GAAU,WALZ;;AAMA,iBAAO;QAXG;MAAZ,CApBF;;MAkCA,aAAA,EAEE,CAAA;;QAAA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,IAAF,KAAU,EAAb;YACE,CAAC,CAAC,IAAF,GAAS,GAAA,GAAM,EADjB;;UAEA,CAAC,CAAC,IAAF,IAAU;UACV,IAAK,CAAE,CAAC,CAAC,IAAI,CAAC,MAAP,CAAc,CAAC,CAAf,CAAF,CAAA,KAAwB,KAA7B;YACE,CAAC,CAAC,IAAF,GAAS,GAAA,GAAM;YACf,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,YAAnB,EAAiC,MAAA,GAAS,CAAC,CAAC,IAA5C;YACA,CAAC,CAAC,IAAF,GAAU;YACV,CAAC,CAAC,KAAF,GAAU,WAJZ;;AAKA,iBAAO;QAVG;MAAZ,CApCF;;MAiDA,eAAA,EAEE,CAAA;;QAAA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;iBACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;QADY,CAAd;;QAGA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,WAAF,GAAkB,GAAA,KAAO;UACzB,CAAC,CAAC,OAAF,GAAgB;iBAChB,CAAC,CAAC,KAAF,GAAgB;QAJN,CAHZ;;QASA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,OAAF,GAAc;iBACd,CAAC,CAAC,UAAF,GAAe;QAHH;MATd,CAnDF;;MAkEA,aAAA,EAEE,CAAA;;QAAA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,UAAL;mBACE,CAAC,CAAC,KAAF,GAAU,cADZ;WAAA,MAAA;YAGE,CAAC,CAAC,KAAF,GAAU;mBACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,CAAC,CAAC,OAAhC,EAJF;;QAFY,CAAd;;QAQA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,UAAL;YACE,CAAC,CAAC,IAAF,GAAS,GAAA,GAAM;YACf,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,UAAnB,EAA+B,CAAC,CAAC,OAAjC,EAFF;WAAA,MAAA;YAIE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,CAAC,CAAC,OAAhC;YACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,eAAnB,EAAoC,CAAC,CAAC,OAAtC,EALF;;UAMA,CAAC,CAAC,IAAF,GAAU;iBACV,CAAC,CAAC,KAAF,GAAU;QATD,CARX;;QAmBA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,SAAF,GAAc;UACd,CAAC,CAAC,KAAF,GAAc;iBACd,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,CAAC,CAAC,OAAhC;QAJY,CAnBd;;QAyBA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,OAAF,IAAa;UACb,IAAG,CAAC,CAAC,OAAF,KAAa,UAAhB;YACE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,cAAnB,EAAmC,CAAC,CAAC,OAArC;YACA,CAAC,CAAC,KAAF,GAAY;YACZ,CAAC,CAAC,IAAF,GAAY;YACZ,CAAC,CAAC,OAAF,GAAY,GAJd;WAAA,MAKK,IAAG,CAAC,CAAC,OAAF,KAAa,KAAhB;YACH,CAAC,CAAC,KAAF,GAAY;YACZ,CAAC,CAAC,IAAF,GAAY;YACZ,CAAC,CAAC,OAAF,GAAY,GAHT;;AAIL,iBAAO;QAZG;MAzBZ,CApEF;;MA4GA,aAAA,EAEE,CAAA;;QAAA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,SAAL;YACE,CAAC,CAAC,SAAF,GAAc;YACd,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,OAApC,EAFF;WAAA,MAAA;YAIE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,UAAnB,EAA+B,CAAC,CAAC,OAAjC,EAJF;;UAKA,CAAC,CAAC,IAAF,GAAU;iBACV,CAAC,CAAC,KAAF,GAAU;QARD,CAAX;;QAUA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;iBACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,eAAnB,EAAoC,GAApC;QAFU;MAVZ,CA9GF;;MA6HA,mBAAA,EAEE,CAAA;;QAAA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,mBAAnB,EAAwC,GAAxC,EADR;;iBAGQ,CAAC,CAAC,KAAF,GAAc;QAJL,CAAX;;QAMA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,IAAF,GAAc;UACd,CAAC,CAAC,OAAF,GAAc;iBACd,CAAC,CAAC,KAAF,GAAc;QAJJ,CANZ;;QAYA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAA,CAAK,OAAL,EAAe,GAAf,EAAoB,eAApB,EAAqC,GAArC;UACA,CAAC,CAAC,IAAF,GAAS;iBACT,CAAC,CAAC,KAAF,GAAU;QAJD,CAZX;;QAkBA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;iBACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;QADY,CAlBd;;QAqBA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,SAAF,GAAgB;UAChB,CAAC,CAAC,UAAF,GAAgB;iBAChB,CAAC,CAAC,KAAF,GAAgB;QAJJ;MArBd,CA/HF;;MA2JA,aAAA,EAEE,CAAA;;QAAA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;iBACA,CAAC,CAAC,KAAF,GAAU;QAFE,CAAd;;QAIA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,YAAnB,EAAiC,CAAC,CAAC,OAAnC;iBACA,CAAC,CAAC,KAAF,GAAU;QAHE,CAJd;;QASA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,QAAF,GAAa;UACb,MAAO,CAAC,CAAC,WAAF,IAAkB,CAAC,CAAC,OAAF,KAAa,IAAtC;YACE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,YAAnB,EAAiC,CAAC,CAAC,OAAnC;YACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC,EAFF;;UAGA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,eAAnB,EAAoC,CAAC,CAAC,OAAtC;UACA,CAAC,CAAC,IAAF,GAAc;iBACd,CAAC,CAAC,KAAF,GAAc;QARL,CATX;;QAmBA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,SAAF,GAAgB;UAChB,CAAC,CAAC,UAAF,GAAgB;UAChB,CAAC,CAAC,QAAF,GAAgB;UAChB,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,YAAnB,EAAiC,CAAC,CAAC,OAAnC;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC;iBACA,CAAC,CAAC,KAAF,GAAU;QAPE,CAnBd;;QA4BA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;iBACA,CAAC,CAAC,OAAF,IAAa;QAFH;MA5BZ,CA7JF;;MA8LA,iBAAA,EAEE,CAAA;;QAAA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;iBACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;QAFY,CAAd;;QAIA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,YAAnB,EAAiC,CAAC,CAAC,OAAnC;iBACA,CAAC,CAAC,KAAF,GAAU;QAHE,CAJd;;QASA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,QAAF,GAAc;UACd,CAAC,CAAC,IAAF,GAAc;UACd,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,YAAnB,EAAiC,CAAC,CAAC,OAAnC;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,eAAnB,EAAoC,CAAC,CAAC,OAAtC;iBACA,CAAC,CAAC,KAAF,GAAc;QAPL,CATX;;QAkBA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,QAAF,GAAa;UACb,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,YAAnB,EAAiC,CAAC,CAAC,OAAnC;UACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC;UACA,CAAC,CAAC,OAAF,GAAa;iBACb,CAAC,CAAC,KAAF,GAAc;QANJ;MAlBZ,CAhMF;;MA0NA,oBAAA,EAEE,CAAA;;QAAA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;iBACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;QADY,CAAd;;QAGA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,SAAF,GAAe;UACf,CAAC,CAAC,QAAF,GAAiB;iBACjB,CAAC,CAAC,KAAF,GAAkB;QAJN,CAHd;;QASA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,QAAF,GAAiB;UACjB,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC;UACA,CAAC,CAAC,IAAF,GAAkB;iBAClB,CAAC,CAAC,KAAF,GAAkB;QALT,CATX;;QAgBA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,CAAC,CAAC,SAAF,GAAkB;UAClB,CAAC,CAAC,QAAF,GAAkB;iBAClB,CAAC,CAAC,KAAF,GAAkB;QAJR;MAhBZ,CA5NF;;MAmPA,cAAA,EAEE,CAAA;;QAAA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,SAAS,CAAC,MAAZ,GAAqB,CAAxB;mBACE,CAAC,CAAC,QAAF,IAAc,IADhB;WAAA,MAAA;YAGE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC;mBACA,CAAC,CAAC,KAAF,GAAU,oBAJZ;;QAFY,CAAd;;QAQA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,GAAA,KAAO,CAAC,CAAC,SAAZ;YACE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC;mBACA,CAAC,CAAC,KAAF,GAAU,oBAFZ;WAAA,MAAA;mBAIE,CAAC,CAAC,QAAF,IAAc,IAJhB;;QAFY,CARd;;QAgBA,SAAA,EAAW,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACT,IAAG,CAAC,CAAC,SAAS,CAAC,MAAZ,GAAqB,CAAxB;YACE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;YACA,CAAC,CAAC,QAAF,IAAc,IAFhB;WAAA,MAAA;YAIE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;YACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC;YACA,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,eAAnB,EAAoC,GAApC;YACA,CAAC,CAAC,IAAF,GAAU;YACV,CAAC,CAAC,KAAF,GAAU,WARZ;;AASA,iBAAO;QAVE,CAhBX;;QA4BA,YAAA,EAAc,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACZ,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;UACA,IAAG,CAAC,CAAC,SAAS,CAAC,MAAZ,GAAqB,CAAxB;mBACE,CAAC,CAAC,QAAF,IAAc,IADhB;WAAA,MAAA;YAGE,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,aAAnB,EAAkC,CAAC,CAAC,QAApC;YACA,CAAC,CAAC,SAAF,GAAgB;YAChB,CAAC,CAAC,UAAF,GAAgB;mBAChB,CAAC,CAAC,KAAF,GAAgB,cANlB;;QAFY,CA5Bd;;QAsCA,UAAA,EAAY,CAAE,GAAF,EAAO,GAAP,CAAA,GAAA;UACV,IAAA,CAAK,OAAL,EAAc,GAAd,EAAmB,SAAnB,EAA8B,GAA9B;iBACA,CAAC,CAAC,QAAF,IAAc;QAFJ;MAtCZ;IArPF,EA3GJ;;AA2YE,WAAO;EA5YA;;EA+YT,MAAM,CAAC,OAAP,GAAiB,CACf,UADe,EAEf,WAFe,EAGf,eAHe,EAIf,aAJe,EAKf,aALe,EAMf,mBANe,EAOf,aAPe,EAQf,iBARe,EASf,oBATe,EAUf,cAVe,EAWf,SAXe,EAYf,SAZe,EAaf,YAbe,EAcf,YAde,EAef,YAfe,EAgBf,YAhBe,EAiBf,UAjBe,EAkBf,YAlBe,EAmBf,SAnBe,EAoBf,SApBe,EAqBf,UArBe,EAsBf,YAtBe,EAuBf,aAvBe,EAwBf,SAxBe,EAyBf,aAzBe,EA0Bf,eA1Be,EA2Bf,mBA3Be,EA4Bf,MA5Be;AAnejB",
  "sourcesContent": [
    "'use strict'\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'XML-LEXER'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n{ assign\n  jr }                    = CND\n#...........................................................................................................\nDATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n{ new_datom\n  wrap_datom\n  lets\n  freeze\n  select }                = DATOM.export()\n\n\n{ isa\n  validate\n  type_of }               = ( new ( require 'intertype' ).Intertype() ).export()\n\nstate_data              = 'state_data'\nstate_cdata             = 'state_cdata'\nstate_comment           = 'state_comment'\nstate_tag_begin         = 'state_tag_begin'\nstate_tagname           = 'state_tagname'\nstate_tag_end           = 'state_tag_end'\nstate_atrname_start     = 'state_atrname_start'\nstate_atrname           = 'state_atrname'\nstate_atrname_end       = 'state_atrname_end'\nstate_atrvalue_begin    = 'state_atrvalue_begin'\nstate_atrvalue          = 'state_atrvalue'\naction_lt               = 'action_lt'\naction_gt               = 'action_gt'\naction_space            = 'action_space'\naction_equal            = 'action_equal'\naction_quote            = 'action_quote'\naction_slash            = 'action_slash'\naction_chr              = 'action_chr'\naction_error            = 'action_error'\nname_text               = 'text'\nname_open               = 'open'\nname_openfinish         = 'openfinish'\nname_opencdata          = 'opencdata'\nname_close              = 'close'\nname_closecdata         = 'closecdata'\nname_comment            = 'comment'\nname_atrname            = 'atrname'\nname_atrvalue           = 'atrvalue'\nname_extraneous         = 'extraneous'\nname_solitary           = 'solitary'\nname_missingbracket     = 'missingbracket'\nname_unfinishedtag      = 'unfinishedtag'\n#...........................................................................................................\nname_noop               = 'noop'\nname_info               = 'info'\n# name_sot                = 'sot' # Start Of Text\n\nactions_by_chrs =\n  ' ':                    action_space\n  '\\t':                   action_space\n  '\\n':                   action_space\n  '\\r':                   action_space\n  '<':                    action_lt\n  '>':                    action_gt\n  '\"':                    action_quote\n  \"'\":                    action_quote\n  '=':                    action_equal\n  '/':                    action_slash\n\n#-----------------------------------------------------------------------------------------------------------\ncreate = ( settings, handler ) ->\n  switch arity = arguments.length\n    when 0 then null\n    when 1 then [ settings, handler, ] = [ null, settings, ]\n    when 2 then null\n    else throw new Error \"^55563^ expected 1 or 2 arguments, got #{arity}\"\n  [ settings, handler, ] = [ handler, null, ] unless isa.function handler\n  ### TAINT validate.xmllexer_settings settings ? {} ###\n  ### TAINT validate.function handler ###\n  defaults          =\n    include_specials:   false\n    emit_info:          false\n    emit_noop:          false\n  settings          = { defaults..., settings..., }\n  lexer             = {}\n\n  #---------------------------------------------------------------------------------------------------------\n  # Registers\n  #---------------------------------------------------------------------------------------------------------\n  ρ =\n    state:          state_data\n    data:           ''\n    tagname:        ''\n    atrname:        ''\n    atrvalue:       ''\n    is_closing:     false\n    prv_quote:      ''\n    has_slash:      false\n    txtl:           null # first index of current or most recent text ('data' or 'cdata') stretch\n    tagl:           null # first index of current or most recent tag\n    tagr:           null # last index of current or most recent tag\n    atrl:           null # first index of either atrname or atrvalue\n    decl_syntax:    false # true if tag opened with `<?`\n    src:            null\n    max_idx:        null\n\n\n  #---------------------------------------------------------------------------------------------------------\n  step = ( idx, chr ) =>\n    if settings.debug then console.log ρ.state, chr\n    actions = lexer.stateMachine[ ρ.state ]\n    action  = actions[ actions_by_chrs[ chr ] ? action_chr ] ? actions[ action_error ] ? actions[ action_chr ]\n    action idx, chr\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.write = ( src ) =>\n    ρ.max_idx = 0\n    ρ.src     = src\n    for idx in [ 0 ... src.length ]\n      step idx, src[ idx ]\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.flush = =>\n    # debug '^4445^', ρ.max_idx, ρ.src.length\n    # debug '^4445^', ρ.state\n    # debug '^4445^', ρ\n    return null unless ρ.max_idx < ρ.src.length - 1\n    idx = ρ.src.length - 1\n    switch ρ.state\n      when state_atrvalue_begin, state_atrvalue\n        emit '^d1^', idx, name_atrvalue,        ρ.atrvalue\n        emit '^d2^', idx, name_openfinish,      ρ.tagname   ? ''\n        emit '^d3^', idx, name_unfinishedtag,   ''\n      when state_atrname\n        emit '^d4^', idx, name_atrname,         ρ.atrname   ? ''\n        emit '^d5^', idx, name_atrvalue,        ρ.atrvalue  ? ''\n        emit '^d6^', idx, name_openfinish,      ρ.tagname   ? ''\n        emit '^d7^', idx, name_unfinishedtag,   ''\n      when state_atrname_start, state_tagname\n        emit '^d10^', idx, name_open,           ρ.tagname   ? ''\n        emit '^d8^', idx, name_openfinish,      ρ.tagname   ? ''\n        emit '^d9^', idx, name_unfinishedtag,   ''\n      when state_tag_begin\n        emit '^d10^', idx, name_open,           ''\n        emit '^d11^', idx, name_openfinish,     ''\n        emit '^d12^', idx, name_unfinishedtag,  ''\n      when state_data\n        emit '^d13^', idx, name_text,           ρ.data      ? ''\n        emit '^d12^', idx, name_extraneous,     '' if ρ.data.endsWith '>'\n      when state_cdata\n        emit '^d13^', idx, name_text,           ρ.data      ? ''\n        emit '^d12^', idx, name_unfinishedtag,  ''\n      when state_comment\n        emit '^d13^', idx, name_text,           '<!--' + ( ρ.data ? '' )\n        emit '^d12^', idx, name_unfinishedtag,  ''\n      else throw new Error \"^4455^ unable to deal with pending state #{ρ.state}\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  emit = ( ref, idx, name, text ) =>\n    # sigil = null\n    # # tags like: '?xml', '!DOCTYPE', comments\n    ρ.max_idx = idx unless name in [ name_noop, name_info, ]\n    return null if ( name is name_noop ) and ( not settings.emit_noop )\n    return null if ( name is name_info ) and ( not settings.emit_info )\n    unless settings.include_specials\n      return null if ρ.tagname[ 0 ] in '!?'\n      return null if name is name_noop\n    { txtl, tagl, tagr, atrl, has_slash, } = ρ\n    stop                        = idx\n    handler new_datom '^raw', { name, text, stop, txtl, tagl, tagr, atrl, has_slash, $: ref, }\n    return null\n\n  lexer.stateMachine =\n\n    #-------------------------------------------------------------------------------------------------------\n    state_data:\n      #.....................................................................................................\n      action_lt: ( idx, chr ) =>\n        emit '^d14^', idx, name_info, chr\n        if ρ.data.length > 0\n          emit '^d15^', idx, name_text, ρ.data\n        ρ.tagl        = idx\n        ρ.tagname     = ''\n        ρ.is_closing  = false\n        ρ.state       = state_tag_begin\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d16^', idx, name_info, chr\n        if ρ.data is ''\n          ρ.txtl = idx\n        ρ.data += chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_cdata:\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d17^', idx, name_info, chr\n        if ρ.data is ''\n          ρ.txtl = idx\n        ρ.data += chr\n        if ( ( ρ.data.substr -3 ) is ']]>' )\n          ρ.tagl = idx - 2\n          emit '^d18^', idx, name_text,       ρ.data.slice 0, -3\n          emit '^d19^', idx, name_closecdata, ρ.data.slice -3\n          ρ.data  = ''\n          ρ.state = state_data\n        return null\n\n    #-------------------------------------------------------------------------------------------------------\n    state_comment:\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d20^', idx, name_info, chr\n        if ρ.data is ''\n          ρ.txtl = idx - 4\n        ρ.data += chr\n        if ( ( ρ.data.substr -3 ) is '-->' )\n          ρ.tagl = idx - 2\n          emit '^d21^', idx, name_comment, '<!--' + ρ.data\n          ρ.data  = ''\n          ρ.state = state_data\n        return null\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tag_begin:\n      #.....................................................................................................\n      action_space: ( idx, chr ) =>\n        emit '^d22^', idx, name_info, chr\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d23^', idx, name_info, chr\n        ρ.decl_syntax = ( chr is '?' )\n        ρ.tagname     = chr\n        ρ.state       = state_tagname\n      #.....................................................................................................\n      action_slash: ( idx, chr ) =>\n        emit '^d24^', idx, name_info, chr\n        ρ.tagname   = ''\n        ρ.is_closing = true\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tagname:\n      #.....................................................................................................\n      action_space: ( idx, chr ) =>\n        emit '^d25^', idx, name_info, chr\n        if ρ.is_closing\n          ρ.state = state_tag_end\n        else\n          ρ.state = state_atrname_start\n          emit '^d26^', idx, name_open, ρ.tagname\n      #.....................................................................................................\n      action_gt: ( idx, chr ) =>\n        emit '^d27^', idx, name_info, chr\n        if ρ.is_closing\n          ρ.tagr = idx + 1\n          emit '^d28^', idx, name_close, ρ.tagname\n        else\n          emit '^d29^', idx, name_open, ρ.tagname\n          emit '^d30^', idx, name_openfinish, ρ.tagname\n        ρ.data  = '';\n        ρ.state = state_data;\n      #.....................................................................................................\n      action_slash: ( idx, chr ) =>\n        emit '^d31^', idx, name_info, chr\n        ρ.has_slash = true\n        ρ.state     = state_tag_end\n        emit '^d32^', idx, name_open, ρ.tagname\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d33^', idx, name_info, chr\n        ρ.tagname += chr\n        if ρ.tagname is '![CDATA['\n          emit '^d34^', idx, name_opencdata, ρ.tagname\n          ρ.state   = state_cdata\n          ρ.data    = ''\n          ρ.tagname = ''\n        else if ρ.tagname is '!--'\n          ρ.state   = state_comment\n          ρ.data    = ''\n          ρ.tagname = ''\n        return null\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tag_end:\n      #.....................................................................................................\n      action_gt: ( idx, chr ) =>\n        emit '^d35^', idx, name_info, chr\n        if ρ.has_slash\n          ρ.has_slash = false\n          emit '^d36^', idx, name_solitary, ρ.tagname\n        else\n          emit '^d37^', idx, name_close, ρ.tagname\n        ρ.data  = ''\n        ρ.state = state_data\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d38^', idx, name_info, chr\n        emit '^d39^', idx, name_extraneous, chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname_start:\n      #.....................................................................................................\n      action_lt: ( idx, chr ) =>\n        emit '^d40^', idx, name_info, chr\n        emit '^d41^', idx, name_missingbracket, chr\n        # emit '^d42^',  idx, name_openfinish, chr\n        ρ.state     = state_tag_begin\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d43^', idx, name_info, chr\n        ρ.atrl      = idx\n        ρ.atrname   = chr\n        ρ.state     = state_atrname\n      #.....................................................................................................\n      action_gt: ( idx, chr ) =>\n        emit '^d44^', idx, name_info, chr\n        emit '^d45^',  idx, name_openfinish, chr\n        ρ.data = ''\n        ρ.state = state_data\n      #.....................................................................................................\n      action_space: ( idx, chr ) =>\n        emit '^d46^', idx, name_info, chr\n      #.....................................................................................................\n      action_slash: ( idx, chr ) =>\n        emit '^d47^', idx, name_info, chr\n        ρ.has_slash   = true\n        ρ.is_closing  = true\n        ρ.state       = state_tag_end\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname:\n      #.....................................................................................................\n      action_space: ( idx, chr ) =>\n        emit '^d48^', idx, name_info, chr\n        ρ.state = state_atrname_end\n      #.....................................................................................................\n      action_equal: ( idx, chr ) =>\n        emit '^d49^', idx, name_info, chr\n        emit '^d50^', idx, name_atrname, ρ.atrname\n        ρ.state = state_atrvalue_begin\n      #.....................................................................................................\n      action_gt: ( idx, chr ) =>\n        emit '^d51^', idx, name_info, chr\n        ρ.atrvalue = ''\n        unless ρ.decl_syntax and ρ.atrname is '?'\n          emit '^d52^', idx, name_atrname, ρ.atrname\n          emit '^d53^', idx, name_atrvalue, ρ.atrvalue\n        emit '^d54^', idx, name_openfinish, ρ.tagname\n        ρ.data      = ''\n        ρ.state     = state_data\n      #.....................................................................................................\n      action_slash: ( idx, chr ) =>\n        emit '^d55^', idx, name_info, chr\n        ρ.has_slash   = true\n        ρ.is_closing  = true\n        ρ.atrvalue    = ''\n        emit '^d56^', idx, name_atrname, ρ.atrname\n        emit '^d57^', idx, name_atrvalue, ρ.atrvalue\n        ρ.state = state_tag_end\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d58^', idx, name_info, chr\n        ρ.atrname += chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname_end:\n      #.....................................................................................................\n      action_space: ( idx, chr ) =>\n        emit '^d59^', idx, name_info, chr\n        emit '^d60^', idx, name_noop, chr\n      #.....................................................................................................\n      action_equal: ( idx, chr ) =>\n        emit '^d61^', idx, name_info, chr\n        emit '^d62^', idx, name_atrname, ρ.atrname\n        ρ.state = state_atrvalue_begin\n      #.....................................................................................................\n      action_gt: ( idx, chr ) =>\n        emit '^d63^', idx, name_info, chr\n        ρ.atrvalue  = ''\n        ρ.data      = ''\n        emit '^d64^', idx, name_atrname, ρ.atrname\n        emit '^d65^', idx, name_atrvalue, ρ.atrvalue\n        emit '^d66^', idx, name_openfinish, ρ.tagname\n        ρ.state     = state_data\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d67^', idx, name_info, chr\n        ρ.atrvalue = ''\n        emit '^d68^', idx, name_atrname, ρ.atrname\n        emit '^d69^', idx, name_atrvalue, ρ.atrvalue\n        ρ.atrname  = chr\n        ρ.state     = state_atrname\n    #-------------------------------------------------------------------------------------------------------\n    state_atrvalue_begin:\n      #.....................................................................................................\n      action_space: ( idx, chr ) =>\n        emit '^d70^', idx, name_info, chr\n      #.....................................................................................................\n      action_quote: ( idx, chr ) =>\n        emit '^d71^', idx, name_info, chr\n        ρ.prv_quote  = chr\n        ρ.atrvalue     = ''\n        ρ.state         = state_atrvalue\n      #.....................................................................................................\n      action_gt: ( idx, chr ) =>\n        emit '^d72^', idx, name_info, chr\n        ρ.atrvalue     = ''\n        emit '^d73^', idx, name_atrvalue, ρ.atrvalue\n        ρ.data          = ''\n        ρ.state         = state_data\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d74^', idx, name_info, chr\n        ρ.prv_quote     = ''\n        ρ.atrvalue      = chr\n        ρ.state         = state_atrvalue\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrvalue:\n      #.....................................................................................................\n      action_space: ( idx, chr ) =>\n        emit '^d75^', idx, name_info, chr\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^d76^', idx, name_atrvalue, ρ.atrvalue\n          ρ.state = state_atrname_start\n      #.....................................................................................................\n      action_quote: ( idx, chr ) =>\n        emit '^d77^', idx, name_info, chr\n        if chr is ρ.prv_quote\n          emit '^d78^', idx, name_atrvalue, ρ.atrvalue\n          ρ.state = state_atrname_start\n        else\n          ρ.atrvalue += chr\n      #.....................................................................................................\n      action_gt: ( idx, chr ) =>\n        if ρ.prv_quote.length > 0\n          emit '^d79^', idx, name_info, chr\n          ρ.atrvalue += chr\n        else\n          emit '^d80^', idx, name_info, chr\n          emit '^d81^', idx, name_atrvalue, ρ.atrvalue\n          emit '^d82^', idx, name_openfinish, chr\n          ρ.data  = ''\n          ρ.state = state_data\n        return null\n      #.....................................................................................................\n      action_slash: ( idx, chr ) =>\n        emit '^d83^', idx, name_info, chr\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^d84^', idx, name_atrvalue, ρ.atrvalue\n          ρ.has_slash   = true\n          ρ.is_closing  = true\n          ρ.state       = state_tag_end\n      #.....................................................................................................\n      action_chr: ( idx, chr ) =>\n        emit '^d85^', idx, name_info, chr\n        ρ.atrvalue += chr\n\n  #---------------------------------------------------------------------------------------------------------\n  return lexer\n\n\nmodule.exports = {\n  state_data\n  state_cdata\n  state_tag_begin\n  state_tagname\n  state_tag_end\n  state_atrname_start\n  state_atrname\n  state_atrname_end\n  state_atrvalue_begin\n  state_atrvalue\n  action_lt\n  action_gt\n  action_space\n  action_equal\n  action_quote\n  action_slash\n  action_chr\n  action_error\n  name_text\n  name_open\n  name_close\n  name_atrname\n  name_atrvalue\n  name_noop\n  name_solitary\n  name_extraneous\n  name_missingbracket\n  create }\n\n\n\n\n"
  ]
}