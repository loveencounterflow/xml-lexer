{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\n\nDATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n{ new_datom\n  wrap_datom\n  lets\n  freeze\n  select }                = DATOM.export()\n\n\nEventEmitter = require('eventemitter3')\n{ isa\n  validate\n  type_of }               = ( new ( require 'intertype' ).Intertype() ).export()\n\nstate_data              = 'state_data'\nstate_cdata             = 'state_cdata'\nstate_tag_begin         = 'state_tag_begin'\nstate_tagname           = 'state_tagname'\nstate_tag_end           = 'state_tag_end'\nstate_atrname_start     = 'state_atrname_start'\nstate_atrname           = 'state_atrname'\nstate_atrname_end       = 'state_atrname_end'\nstate_atrvalue_begin    = 'state_atrvalue_begin'\nstate_atrvalue          = 'state_atrvalue'\naction_lt               = 'action_lt'\naction_gt               = 'action_gt'\naction_space            = 'action_space'\naction_equal            = 'action_equal'\naction_quote            = 'action_quote'\naction_slash            = 'action_slash'\naction_chr              = 'action_chr'\naction_error            = 'action_error'\nname_text               = 'text'\nname_open               = 'open'\nname_openfinish         = 'openfinish'\nname_close              = 'close'\nname_atrname            = 'atrname'\nname_atrvalue           = 'atrvalue'\nname_extraneous         = 'extraneous'\nname_solitary           = 'solitary'\nname_missingbracket     = 'missingbracket'\n#...........................................................................................................\nname_noop               = 'noop'\nname_info               = 'info'\n# name_sot                = 'sot' # Start Of Text\n\nactions_by_chrs =\n  ' ':                    action_space\n  '\\t':                   action_space\n  '\\n':                   action_space\n  '\\r':                   action_space\n  '<':                    action_lt\n  '>':                    action_gt\n  '\"':                    action_quote\n  \"'\":                    action_quote\n  '=':                    action_equal\n  '/':                    action_slash\n\n#-----------------------------------------------------------------------------------------------------------\ncreate = ( settings, handler ) ->\n  switch arity = arguments.length\n    when 0 then null\n    when 1 then [ settings, handler, ] = [ null, settings, ]\n    when 2 then null\n    else throw new Error \"^55563^ expected 1 or 2 arguments, got #{arity}\"\n  [ settings, handler, ] = [ handler, null, ] unless isa.function handler\n  ### TAINT validate.xmllexer_settings settings ? {} ###\n  ### TAINT validate.function handler ###\n  defaults          =\n    include_specials:   false\n    emit_info:          false\n    emit_noop:          false\n  settings          = { defaults..., settings..., }\n  lexer             = new EventEmitter()\n\n  #---------------------------------------------------------------------------------------------------------\n  # Registers\n  #---------------------------------------------------------------------------------------------------------\n  ρ =\n    state:          state_data\n    data:           ''\n    tagname:        ''\n    atrname:        ''\n    atrvalue:       ''\n    is_closing:     false\n    prv_quote:      ''\n    has_slash:      false\n    txtl:           null # first index of current or most recent text ('data' or 'cdata') stretch\n    tagl:           null # first index of current or most recent tag\n    tagr:           null # last index of current or most recent tag\n    atrl:           null # first index of either atrname or atrvalue\n\n  #---------------------------------------------------------------------------------------------------------\n  step = ( src, idx, chr ) =>\n    if settings.debug then console.log ρ.state, chr\n    actions = lexer.stateMachine[ ρ.state ]\n    action  = actions[ actions_by_chrs[ chr ] ? action_chr ] ? actions[ action_error ] ? actions[ action_chr ]\n    action src, idx, chr\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.write = ( src ) =>\n    for idx in [ 0 ... src.length ]\n      step src, idx, src[ idx ]\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.flush = =>\n\n  #---------------------------------------------------------------------------------------------------------\n  emit = ( ref, src, idx, name, text ) =>\n    # sigil = null\n    # # tags like: '?xml', '!DOCTYPE', comments\n    return null if ( name is name_noop ) and ( not settings.emit_noop )\n    return null if ( name is name_info ) and ( not settings.emit_info )\n    unless settings.include_specials\n      return null if ρ.tagname[ 0 ] in '!?'\n      return null if name is name_noop\n    # switch sigil = ρ.tagname[ 0 ]\n    #   when '?' then name = ''\n    #   when '!' then name = 'declaration'\n    # event.sigil = sigil if sigil?\n    registers = {}\n    for k, v of ρ\n      registers[ k ] = v unless v in [ undefined, '', false, ]\n    if handler?\n      { txtl, tagl, tagr, atrl, has_slash, } = ρ\n      stop                        = idx\n      handler new_datom '^raw', { name, text, stop, txtl, tagl, tagr, atrl, has_slash, $: ref, }\n    else\n      return null if name is 'openfinish'\n      return null if name is 'extraneous'\n      type  = name\n      value = text\n      lexer.emit 'data', { type, value, }\n    return null\n\n  lexer.stateMachine =\n\n    #-------------------------------------------------------------------------------------------------------\n    state_data:\n      #.....................................................................................................\n      action_lt: ( src, idx, chr ) =>\n        emit '^d1^', src, idx, name_info, chr\n        if ρ.data.length > 0\n          emit '^d2^', src, idx, name_text, ρ.data\n        ρ.tagl        = idx\n        ρ.tagname     = ''\n        ρ.is_closing  = false\n        ρ.state       = state_tag_begin\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d3^', src, idx, name_info, chr\n        if ρ.data is ''\n          ρ.txtl = idx\n        ρ.data += chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_cdata:\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d4^', src, idx, name_info, chr\n        if ρ.data is ''\n          ρ.txtl = idx\n        ρ.data += chr\n        if ( ( ρ.data.substr -3 ) is ']]>' )\n          emit '^d5^', src, idx, name_text, ρ.data.slice 0, -3\n          ρ.data  = ''\n          ρ.state = state_data\n        return null\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tag_begin:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d6^', src, idx, name_info, chr\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d8^', src, idx, name_info, chr\n        ρ.tagname = chr\n        ρ.state   = state_tagname\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d9^', src, idx, name_info, chr\n        ρ.tagname   = ''\n        ρ.is_closing = true\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tagname:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d10^', src, idx, name_info, chr\n        if ρ.is_closing\n          ρ.state = state_tag_end\n        else\n          ρ.state = state_atrname_start\n          emit '^d11^', src, idx, name_open, ρ.tagname\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d12^', src, idx, name_info, chr\n        if ρ.is_closing\n          ρ.tagr = idx + 1\n          emit '^d13^', src, idx, name_close, ρ.tagname\n        else\n          emit '^d14^', src, idx, name_open, ρ.tagname\n          emit '^d15^', src, idx, name_openfinish, ρ.tagname\n        ρ.data  = '';\n        ρ.state = state_data;\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d16^', src, idx, name_info, chr\n        ρ.has_slash = true\n        ρ.state     = state_tag_end\n        emit '^d17^', src, idx, name_open, ρ.tagname\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d18^', src, idx, name_info, chr\n        ρ.tagname += chr\n        if ρ.tagname is '![CDATA['\n          ρ.state   = state_cdata\n          ρ.data    = ''\n          ρ.tagname = ''\n\n    #-------------------------------------------------------------------------------------------------------\n    state_tag_end:\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d19^', src, idx, name_info, chr\n        console.log '^37376^', idx, chr, src[ idx - 5 .. idx + 5 ], ρ.is_closing, ρ.has_slash\n        if ρ.has_slash\n          ρ.has_slash = false\n          emit '^d20^', src, idx, name_solitary, ρ.tagname\n        else\n          emit '^d20^', src, idx, name_close, ρ.tagname\n        ρ.data  = ''\n        ρ.state = state_data\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d21^', src, idx, name_info, chr\n        emit '^d22^', src, idx, name_extraneous, chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname_start:\n      #.....................................................................................................\n      action_lt: ( src, idx, chr ) =>\n        emit '^d23a^', src, idx, name_info, chr\n        emit '^d22a^', src, idx, name_missingbracket, chr\n        # emit '^d25a^',  src, idx, name_openfinish, chr\n        ρ.state     = state_tag_begin\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d23^', src, idx, name_info, chr\n        ρ.atrl      = idx\n        ρ.atrname   = chr\n        ρ.state     = state_atrname\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d24^', src, idx, name_info, chr\n        emit '^d25^',  src, idx, name_openfinish, chr\n        ρ.data = ''\n        ρ.state = state_data\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d26^', src, idx, name_info, chr\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d28^', src, idx, name_info, chr\n        ρ.is_closing = true\n        ρ.state     = state_tag_end\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d29^', src, idx, name_info, chr\n        ρ.state = state_atrname_end\n      #.....................................................................................................\n      action_equal: ( src, idx, chr ) =>\n        emit '^d31^', src, idx, name_info, chr\n        emit '^d32^', src, idx, name_atrname, ρ.atrname\n        ρ.state = state_atrvalue_begin\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d33^', src, idx, name_info, chr\n        emit '^d34^', src, idx, name_openfinish, ρ.tagname\n        ρ.atrvalue = ''\n        emit '^d35^', src, idx, name_atrname, ρ.atrname\n        emit '^d36^', src, idx, name_atrvalue, ρ.atrvalue\n        ρ.data      = ''\n        ρ.state     = state_data\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d37^', src, idx, name_info, chr\n        ρ.is_closing = true\n        ρ.atrvalue = ''\n        emit '^d38^', src, idx, name_atrname, ρ.atrname\n        emit '^d39^', src, idx, name_atrvalue, ρ.atrvalue\n        ρ.state = state_tag_end\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d40^', src, idx, name_info, chr\n        ρ.atrname += chr\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrname_end:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d41^', src, idx, name_info, chr\n        emit '^d42^', src, idx, name_noop, chr\n      #.....................................................................................................\n      action_equal: ( src, idx, chr ) =>\n        emit '^d43^', src, idx, name_info, chr\n        emit '^d44^', src, idx, name_atrname, ρ.atrname\n        ρ.state = state_atrvalue_begin\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d45^', src, idx, name_info, chr\n        emit '^d46^', src, idx, name_openfinish, ρ.tagname\n        ρ.atrvalue = ''\n        emit '^d47^', src, idx, name_atrname, ρ.atrname\n        emit '^d48^', src, idx, name_atrvalue, ρ.atrvalue\n        ρ.data      = ''\n        ρ.state     = state_data\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d49^', src, idx, name_info, chr\n        ρ.atrvalue = ''\n        emit '^d50^', src, idx, name_atrname, ρ.atrname\n        emit '^d51^', src, idx, name_atrvalue, ρ.atrvalue\n        ρ.atrname  = chr\n        ρ.state     = state_atrname\n    #-------------------------------------------------------------------------------------------------------\n    state_atrvalue_begin:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d52^', src, idx, name_info, chr\n      #.....................................................................................................\n      action_quote: ( src, idx, chr ) =>\n        emit '^d54^', src, idx, name_info, chr\n        ρ.prv_quote  = chr\n        ρ.atrvalue     = ''\n        ρ.state         = state_atrvalue\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^d55^', src, idx, name_info, chr\n        ρ.atrvalue     = ''\n        emit '^d56^', src, idx, name_atrvalue, ρ.atrvalue\n        ρ.data          = ''\n        ρ.state         = state_data\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d57^', src, idx, name_info, chr\n        ρ.prv_quote     = ''\n        ρ.atrvalue      = chr\n        ρ.state         = state_atrvalue\n\n    #-------------------------------------------------------------------------------------------------------\n    state_atrvalue:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        emit '^d58^', src, idx, name_info, chr\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^d59^', src, idx, name_atrvalue, ρ.atrvalue\n          ρ.state = state_atrname_start\n      #.....................................................................................................\n      action_quote: ( src, idx, chr ) =>\n        emit '^d60^', src, idx, name_info, chr\n        if chr is ρ.prv_quote\n          emit '^d61^', src, idx, name_atrvalue, ρ.atrvalue\n          ρ.state = state_atrname_start\n        else\n          ρ.atrvalue += chr\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        if ρ.prv_quote.length > 0\n          emit '^d62^', src, idx, name_info, chr\n          ρ.atrvalue += chr\n        else\n          emit '^d63^', src, idx, name_info, chr\n          emit '^d64^', src, idx, name_atrvalue, ρ.atrvalue\n          emit '^d65^', src, idx, name_openfinish, chr\n          ρ.data  = ''\n          ρ.state = state_data\n        return null\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        emit '^d66^', src, idx, name_info, chr\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^d67^', src, idx, name_atrvalue, ρ.atrvalue\n          ρ.has_slash   = true\n          ρ.is_closing  = true\n          ρ.state       = state_tag_end\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        emit '^d68^', src, idx, name_info, chr\n        ρ.atrvalue += chr\n\n  #---------------------------------------------------------------------------------------------------------\n  return lexer\n\n\nmodule.exports = {\n  state_data\n  state_cdata\n  state_tag_begin\n  state_tagname\n  state_tag_end\n  state_atrname_start\n  state_atrname\n  state_atrname_end\n  state_atrvalue_begin\n  state_atrvalue\n  action_lt\n  action_gt\n  action_space\n  action_equal\n  action_quote\n  action_slash\n  action_chr\n  action_error\n  name_text\n  name_open\n  name_close\n  name_atrname\n  name_atrvalue\n  name_noop\n  create }\n\n\n\n\n"
  ]
}