{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\n\n\nEventEmitter = require('eventemitter3')\n{ isa\n  validate\n  type_of }               = ( new ( require 'intertype' ).Intertype() ).export()\n\nstate_data              = 'state_data'\nstate_cdata             = 'state_cdata'\nstate_tag_begin         = 'state_tag_begin'\nstate_tagname           = 'state_tagname'\nstate_tag_end           = 'state_tag_end'\nstate_atrname_start     = 'state_atrname_start'\nstate_atrname           = 'state_atrname'\nstate_atrname_end       = 'state_atrname_end'\nstate_atrvalue_begin    = 'state_atrvalue_begin'\nstate_atrvalue          = 'state_atrvalue'\naction_lt               = 'action_lt'\naction_gt               = 'action_gt'\naction_space            = 'action_space'\naction_equal            = 'action_equal'\naction_quote            = 'action_quote'\naction_slash            = 'action_slash'\naction_chr              = 'action_chr'\naction_error            = 'action_error'\ntype_text               = 'text'\ntype_open               = 'open'\ntype_close              = 'close'\ntype_atrname            = 'atrname'\ntype_atrvalue           = 'atrvalue'\ntype_noop               = 'noop'\n\nactions_by_chrs =\n  ' ':                    action_space\n  '\\t':                   action_space\n  '\\n':                   action_space\n  '\\r':                   action_space\n  '<':                    action_lt\n  '>':                    action_gt\n  '\"':                    action_quote\n  \"'\":                    action_quote\n  '=':                    action_equal\n  '/':                    action_slash\n\n#-----------------------------------------------------------------------------------------------------------\ncreate = ( settings, handler ) ->\n  switch arity = arguments.length\n    when 0 then null\n    when 1 then [ settings, handler, ] = [ null, settings, ]\n    when 2 then null\n    else throw new Error \"^55563^ expected 1 or 2 arguments, got #{arity}\"\n  [ settings, handler, ] = [ handler, null, ] unless isa.function handler\n  ### TAINT validate.xmllexer_settings settings ? {} ###\n  ### TAINT validate.function handler ###\n  settings          = { { include_specials: false, }..., settings..., }\n  lexer             = new EventEmitter()\n\n  #---------------------------------------------------------------------------------------------------------\n  # Registers\n  #---------------------------------------------------------------------------------------------------------\n  ρ =\n    state:         state_data\n    data:          ''\n    tagname:       ''\n    atrname:       ''\n    atrvalue:      ''\n    is_closing:     false\n    prv_quote:      ''\n\n  #---------------------------------------------------------------------------------------------------------\n  step = ( src, idx, chr ) =>\n    if settings.debug then console.log ρ.state, chr\n    actions = lexer.stateMachine[ ρ.state ]\n    action  = actions[ actions_by_chrs[ chr ] ? action_chr ] ? actions[ action_error ] ? actions[ action_chr ]\n    action src, idx, chr\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.write = ( src ) =>\n    for idx in [ 0 ... src.length ]\n      step src, idx, src[ idx ]\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.flush = =>\n\n  #---------------------------------------------------------------------------------------------------------\n  emit = ( ref, src, idx, type, value ) =>\n    # sigil = null\n    # # tags like: '?xml', '!DOCTYPE', comments\n    unless settings.include_specials\n      return null if ρ.tagname[ 0 ] in '!?'\n      return null if type is type_noop\n    # switch sigil = ρ.tagname[ 0 ]\n    #   when '?' then type = ''\n    #   when '!' then type = 'declaration'\n    # event.sigil = sigil if sigil?\n    event = { ref, type, value }\n    registers = {}\n    for k, v of ρ\n      registers[ k ] = v unless v in [ undefined, '', false, ]\n    if handler?\n      $key = \"^xmlxr:#{type}\"\n      handler { $key, type, value, idx, ρ: registers, ref, }\n    else\n      lexer.emit 'data', { type, value, }\n\n  lexer.stateMachine =\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_data]:\n      #.....................................................................................................\n      action_lt: ( src, idx, chr ) =>\n        if ρ.data.trim().length > 0\n          emit '^1^', src, idx, type_text, ρ.data\n        ρ.tagname    = ''\n        ρ.is_closing  = false\n        ρ.state       = state_tag_begin\n      #.....................................................................................................\n      action_chr: ( ( src, idx, chr ) => ρ.data += chr )\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_cdata]:\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        ρ.data += chr\n        if ( ( ρ.data.substr -3 ) is ']]>' )\n          emit '^2^', src, idx, type_text, ρ.data.slice 0, -3\n          ρ.data  = ''\n          ρ.state = state_data\n        return null\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_tag_begin]:\n      #.....................................................................................................\n      action_space: ( ( src, idx, chr ) => emit '^3^', src, idx, type_noop, chr )\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        ρ.tagname = chr\n        ρ.state   = state_tagname\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        ρ.tagname   = ''\n        ρ.is_closing = true\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_tagname]:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        if ρ.is_closing\n          ρ.state = state_tag_end\n        else\n          ρ.state = state_atrname_start\n          emit '^4^', src, idx, type_open, ρ.tagname\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        if ρ.is_closing\n          emit '^5^', src, idx, type_close, ρ.tagname\n        else\n          emit '^6^', src, idx, type_open, ρ.tagname\n        ρ.data  = '';\n        ρ.state = state_data;\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        ρ.state = state_tag_end\n        emit '^7^', src, idx, type_open, ρ.tagname\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        ρ.tagname += chr\n        if ρ.tagname is '![CDATA['\n          ρ.state   = state_cdata\n          ρ.data    = ''\n          ρ.tagname = ''\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_tag_end]:\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        emit '^8^', src, idx, type_close, ρ.tagname\n        ρ.data  = ''\n        ρ.state = state_data\n      #.....................................................................................................\n      action_chr: ( ( src, idx, chr ) => emit '^9^', src, idx, type_noop, chr )\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_atrname_start]:\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        ρ.atrname  = chr\n        ρ.state     = state_atrname\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        ρ.data = ''\n        ρ.state = state_data\n      #.....................................................................................................\n      action_space: ( ( src, idx, chr ) => emit '^10^', src, idx, type_noop, chr )\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        ρ.is_closing = true\n        ρ.state     = state_tag_end\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_atrname]:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        ρ.state = state_atrname_end\n      #.....................................................................................................\n      action_equal: ( src, idx, chr ) =>\n        emit '^11^', src, idx, type_atrname, ρ.atrname\n        ρ.state = state_atrvalue_begin\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        ρ.atrvalue = ''\n        emit '^12^', src, idx, type_atrname, ρ.atrname\n        emit '^13^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.data      = ''\n        ρ.state     = state_data\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        ρ.is_closing = true\n        ρ.atrvalue = ''\n        emit '^14^', src, idx, type_atrname, ρ.atrname\n        emit '^15^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.state = state_tag_end\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        ρ.atrname += chr\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_atrname_end]:\n      #.....................................................................................................\n      action_space: ( ( src, idx, chr ) => emit '^16^', src, idx, type_noop, chr )\n      #.....................................................................................................\n      action_equal: ( src, idx, chr ) =>\n        emit '^17^', src, idx, type_atrname, ρ.atrname\n        ρ.state = state_atrvalue_begin\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        ρ.atrvalue = ''\n        emit '^18^', src, idx, type_atrname, ρ.atrname\n        emit '^19^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.data      = ''\n        ρ.state     = state_data\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        ρ.atrvalue = ''\n        emit '^20^', src, idx, type_atrname, ρ.atrname\n        emit '^21^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.atrname  = chr\n        ρ.state     = state_atrname\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_atrvalue_begin]:\n      #.....................................................................................................\n      action_space: ( ( src, idx, chr ) => emit '^22^', src, idx, type_noop, chr )\n      #.....................................................................................................\n      action_quote: ( src, idx, chr ) =>\n        ρ.prv_quote  = chr\n        ρ.atrvalue     = ''\n        ρ.state         = state_atrvalue\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        ρ.atrvalue     = ''\n        emit '^23^', src, idx, type_atrvalue, ρ.atrvalue\n        ρ.data          = ''\n        ρ.state         = state_data\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        ρ.prv_quote  = ''\n        ρ.atrvalue     = chr\n        ρ.state         = state_atrvalue\n\n    #-------------------------------------------------------------------------------------------------------\n    [state_atrvalue]:\n      #.....................................................................................................\n      action_space: ( src, idx, chr ) =>\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^24^', src, idx, type_atrvalue, ρ.atrvalue\n          ρ.state = state_atrname_start\n      #.....................................................................................................\n      action_quote: ( src, idx, chr ) =>\n        if chr is ρ.prv_quote\n          emit '^25^', src, idx, type_atrvalue, ρ.atrvalue\n          ρ.state = state_atrname_start\n        else\n          ρ.atrvalue += chr\n      #.....................................................................................................\n      action_gt: ( src, idx, chr ) =>\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^26^', src, idx, type_atrvalue, ρ.atrvalue\n          ρ.data  = ''\n          ρ.state = state_data\n      #.....................................................................................................\n      action_slash: ( src, idx, chr ) =>\n        if ρ.prv_quote.length > 0\n          ρ.atrvalue += chr\n        else\n          emit '^27^', src, idx, type_atrvalue, ρ.atrvalue\n          ρ.is_closing = true\n          ρ.state     = state_tag_end\n      #.....................................................................................................\n      action_chr: ( src, idx, chr ) =>\n        ρ.atrvalue += chr\n\n  #---------------------------------------------------------------------------------------------------------\n  return lexer\n\n\nmodule.exports = {\n  state_data\n  state_cdata\n  state_tag_begin\n  state_tagname\n  state_tag_end\n  state_atrname_start\n  state_atrname\n  state_atrname_end\n  state_atrvalue_begin\n  state_atrvalue\n  action_lt\n  action_gt\n  action_space\n  action_equal\n  action_quote\n  action_slash\n  action_chr\n  action_error\n  type_text\n  type_open\n  type_close\n  type_atrname\n  type_atrvalue\n  type_noop\n  create }\n\n\n\n\n"
  ]
}