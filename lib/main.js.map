{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;AAAA,MAAA,MAAA,EAAA,YAAA,EAAA,KAAA,EAAA,IAAA,EAAA,eAAA,EAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,QAAA;IAAA;;EAGA,YAAA,GAAe,OAAA,CAAQ,eAAR;;EACf,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,CAAA,GAE4B,CAAE,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA,CAAF,CAA2C,CAAC,MAA5C,CAAA,CAF5B;;EAIA,KAAA,GACE;IAAA,IAAA,EAAwB,YAAxB;IACA,KAAA,EAAwB,aADxB;IAEA,QAAA,EAAwB,iBAFxB;IAGA,QAAA,EAAwB,gBAHxB;IAIA,MAAA,EAAwB,eAJxB;IAKA,cAAA,EAAwB,sBALxB;IAMA,QAAA,EAAwB,gBANxB;IAOA,YAAA,EAAwB,oBAPxB;IAQA,eAAA,EAAwB,uBARxB;IASA,SAAA,EAAwB;EATxB;;EAWF,MAAA,GACE;IAAA,EAAA,EAAwB,WAAxB;IACA,EAAA,EAAwB,WADxB;IAEA,KAAA,EAAwB,cAFxB;IAGA,KAAA,EAAwB,cAHxB;IAIA,KAAA,EAAwB,cAJxB;IAKA,KAAA,EAAwB,cALxB;IAMA,GAAA,EAAwB,YANxB;IAOA,KAAA,EAAwB;EAPxB;;EASF,IAAA,GACE;IAAA,IAAA,EAAwB,MAAxB;IACA,OAAA,EAAwB,MADxB;IAEA,QAAA,EAAwB,OAFxB;IAGA,QAAA,EAAwB,UAHxB;IAIA,SAAA,EAAwB,WAJxB;IAKA,IAAA,EAAwB;EALxB;;EAOF,eAAA,GACE;IAAA,GAAA,EAAwB,MAAM,CAAC,KAA/B;IACA,IAAA,EAAwB,MAAM,CAAC,KAD/B;IAEA,IAAA,EAAwB,MAAM,CAAC,KAF/B;IAGA,IAAA,EAAwB,MAAM,CAAC,KAH/B;IAIA,GAAA,EAAwB,MAAM,CAAC,EAJ/B;IAKA,GAAA,EAAwB,MAAM,CAAC,EAL/B;IAMA,GAAA,EAAwB,MAAM,CAAC,KAN/B;IAOA,GAAA,EAAwB,MAAM,CAAC,KAP/B;IAQA,GAAA,EAAwB,MAAM,CAAC,KAR/B;IASA,GAAA,EAAwB,MAAM,CAAC;EAT/B,EAvCF;;;EAmDA,MAAA,GAAS,QAAA,CAAE,QAAF,EAAY,OAAZ,CAAA;AACT,QAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA;AAAE,YAAO,KAAA,GAAQ,SAAS,CAAC,MAAzB;AAAA,WACO,CADP;QACc;AAAP;AADP,WAEO,CAFP;QAEc,CAAE,QAAF,EAAY,OAAZ,CAAA,GAAyB,CAAE,IAAF,EAAQ,QAAR;AAAhC;AAFP,WAGO,CAHP;QAGc;AAAP;AAHP;QAIO,MAAM,IAAI,KAAJ,CAAU,CAAA,uCAAA,CAAA,CAA0C,KAA1C,CAAA,CAAV;AAJb;IAKA,KAAmD,GAAG,CAAC,QAAJ,CAAa,OAAb,CAAnD;MAAA,CAAE,QAAF,EAAY,OAAZ,CAAA,GAAyB,CAAE,OAAF,EAAW,IAAX,EAAzB;;IAGA,QAAA,GAAoB,CAAE,GAAA;QAAE,gBAAA,EAAkB;MAApB,CAAF,EAAmC,GAAA,QAAnC;IACpB,KAAA,GAAoB,IAAI,YAAJ,CAAA,EATtB;;;;IAcE,CAAA,GACE;MAAA,KAAA,EAAgB,KAAK,CAAC,IAAtB;MACA,IAAA,EAAgB,EADhB;MAEA,QAAA,EAAgB,EAFhB;MAGA,SAAA,EAAgB,EAHhB;MAIA,SAAA,EAAgB,EAJhB;MAKA,UAAA,EAAgB,KALhB;MAMA,SAAA,EAAgB;IANhB,EAfJ;;IAwBE,IAAA,GAAO,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;AACT,UAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA;MAAI,IAAG,QAAQ,CAAC,KAAZ;QAAuB,OAAO,CAAC,GAAR,CAAY,CAAC,CAAC,KAAd,EAAqB,GAArB,EAAvB;;MACA,OAAA,GAAU,KAAK,CAAC,YAAY,CAAE,CAAC,CAAC,KAAJ;MAC5B,MAAA,gJAAqF,OAAO,CAAE,MAAM,CAAC,GAAT;MAC5F,MAAA,CAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB;AACA,aAAO;IALF,EAxBT;;IAgCE,KAAK,CAAC,KAAN,GAAc,CAAE,GAAF,CAAA,GAAA;AAChB,UAAA,CAAA,EAAA,GAAA,EAAA;MAAI,KAAW,8FAAX;QACE,IAAA,CAAK,GAAL,EAAU,GAAV,EAAe,GAAG,CAAE,GAAF,CAAlB;MADF;AAEA,aAAO;IAHK,EAhChB;;IAsCE,KAAK,CAAC,KAAN,GAAc,CAAA,CAAA,GAAA,EAAA,EAtChB;;IAyCE,IAAA,GAAO,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,KAAvB,CAAA,GAAA;AACT,UAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA;;;MAEI,KAAO,QAAQ,CAAC,gBAAhB;QACE,WAAe,CAAC,CAAC,QAAQ,CAAE,CAAF,gBAAS,MAAnB,UAAf;AAAA,iBAAO,KAAP;;QACA,IAAe,IAAA,KAAQ,IAAI,CAAC,IAA5B;AAAA,iBAAO,KAAP;SAFF;OAFJ;;;;;MASI,KAAA,GAAQ,CAAE,GAAF,EAAO,IAAP,EAAa,KAAb;MACR,SAAA,GAAY,CAAA;MACZ,KAAA,MAAA;;QACE,IAA0B,MAAO,YAAP,MAAkB,MAAlB,MAAsB,KAAhD;UAAA,SAAS,CAAE,CAAF,CAAT,GAAiB,EAAjB;;MADF;MAEA,IAAG,eAAH;eAAkB,OAAA,CAAQ;UAAE,IAAF;UAAQ,KAAR;UAAe,GAAf;UAAoB,CAAA,EAAG,SAAvB;UAAkC;QAAlC,CAAR,EAAlB;OAAA,MAAA;eACkB,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,CAAE,IAAF,EAAQ,KAAR,CAAnB,EADlB;;IAdK;IAiBP,KAAK,CAAC,YAAN,GAGE,CAAA;;MAAA,CAAC,KAAK,CAAC,IAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,EAAR,CAAA,EAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACX,IAAG,CAAC,CAAC,IAAI,CAAC,IAAP,CAAA,CAAa,CAAC,MAAd,GAAuB,CAA1B;YACE,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,IAA3B,EAAiC,CAAC,CAAC,IAAnC,EADF;;UAEA,CAAC,CAAC,QAAF,GAAgB;UAChB,CAAC,CAAC,UAAF,GAAgB;iBAChB,CAAC,CAAC,KAAF,GAAgB,KAAK,CAAC;QALX,CAAb;;QAOA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBAAqB,CAAC,CAAC,IAAF,IAAU;QAA/B,CAAF;MAPd,CAFF;;MAYA,CAAC,KAAK,CAAC,KAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACZ,CAAC,CAAC,IAAF,IAAU;UACV,IAAK,CAAE,CAAC,CAAC,IAAI,CAAC,MAAP,CAAc,CAAC,CAAf,CAAF,CAAA,KAAwB,KAA7B;YACE,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,IAA3B,EAAiC,CAAC,CAAC,IAAI,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAjC;YACA,CAAC,CAAC,IAAF,GAAU;mBACV,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC,KAHlB;;QAFY;MAAd,CAdF;;MAsBA,CAAC,KAAK,CAAC,QAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBAAqB,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,IAA3B,EAAiC,GAAjC;QAArB,CAAF,CAAhB;;QAEA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACZ,CAAC,CAAC,QAAF,GAAa;iBACb,CAAC,CAAC,KAAF,GAAY,KAAK,CAAC;QAFN,CAFd;;QAMA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,CAAC,CAAC,QAAF,GAAe;iBACf,CAAC,CAAC,UAAF,GAAe;QAFD;MANhB,CAxBF;;MAmCA,CAAC,KAAK,CAAC,QAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,IAAG,CAAC,CAAC,UAAL;mBACE,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC,OADlB;WAAA,MAAA;YAGE,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;mBAChB,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,OAA3B,EAAoC,CAAC,CAAC,QAAtC,EAJF;;QADc,CAAhB;;QAOA,CAAC,MAAM,CAAC,EAAR,CAAA,EAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACX,IAAG,CAAC,CAAC,UAAL;YACE,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,QAA3B,EAAqC,CAAC,CAAC,QAAvC,EADF;WAAA,MAAA;YAGE,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,OAA3B,EAAoC,CAAC,CAAC,QAAtC,EAHF;;UAIA,CAAC,CAAC,IAAF,GAAU;iBACV,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;QANL,CAPb;;QAeA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;iBAChB,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,OAA3B,EAAoC,CAAC,CAAC,QAAtC;QAFc,CAfhB;;QAmBA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACZ,CAAC,CAAC,QAAF,IAAc;UACd,IAAG,CAAC,CAAC,QAAF,KAAc,UAAjB;YACE,CAAC,CAAC,KAAF,GAAY,KAAK,CAAC;YAClB,CAAC,CAAC,IAAF,GAAY;mBACZ,CAAC,CAAC,QAAF,GAAa,GAHf;;QAFY;MAnBd,CArCF;;MAgEA,CAAC,KAAK,CAAC,MAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,EAAR,CAAA,EAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACX,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,QAA3B,EAAqC,CAAC,CAAC,QAAvC;UACA,CAAC,CAAC,IAAF,GAAU;iBACV,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;QAHL,CAAb;;QAKA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBAAqB,IAAA,CAAK,KAAL,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAI,CAAC,IAA3B,EAAiC,GAAjC;QAArB,CAAF;MALd,CAlEF;;MA0EA,CAAC,KAAK,CAAC,cAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACZ,CAAC,CAAC,SAAF,GAAe;iBACf,CAAC,CAAC,KAAF,GAAc,KAAK,CAAC;QAFR,CAAd;;QAIA,CAAC,MAAM,CAAC,EAAR,CAAA,EAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACX,CAAC,CAAC,IAAF,GAAS;iBACT,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;QAFL,CAJb;;QAQA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBAAqB,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,IAA5B,EAAkC,GAAlC;QAArB,CAAF,CARhB;;QAUA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,CAAC,CAAC,UAAF,GAAe;iBACf,CAAC,CAAC,KAAF,GAAc,KAAK,CAAC;QAFN;MAVhB,CA5EF;;MA2FA,CAAC,KAAK,CAAC,QAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBACd,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;QADF,CAAhB;;QAGA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,QAA5B,EAAsC,CAAC,CAAC,SAAxC;iBACA,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;QAFF,CAHhB;;QAOA,CAAC,MAAM,CAAC,EAAR,CAAA,EAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACX,CAAC,CAAC,SAAF,GAAc;UACd,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,QAA5B,EAAsC,CAAC,CAAC,SAAxC;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;UACA,CAAC,CAAC,IAAF,GAAc;iBACd,CAAC,CAAC,KAAF,GAAc,KAAK,CAAC;QALT,CAPb;;QAcA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,CAAC,CAAC,UAAF,GAAe;UACf,CAAC,CAAC,SAAF,GAAc;UACd,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,QAA5B,EAAsC,CAAC,CAAC,SAAxC;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;iBACA,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;QALF,CAdhB;;QAqBA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBACZ,CAAC,CAAC,SAAF,IAAe;QADH;MArBd,CA7FF;;MAsHA,CAAC,KAAK,CAAC,YAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBAAqB,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,IAA5B,EAAkC,GAAlC;QAArB,CAAF,CAAhB;;QAEA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,QAA5B,EAAsC,CAAC,CAAC,SAAxC;iBACA,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC;QAFF,CAFhB;;QAMA,CAAC,MAAM,CAAC,EAAR,CAAA,EAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACX,CAAC,CAAC,SAAF,GAAc;UACd,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,QAA5B,EAAsC,CAAC,CAAC,SAAxC;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;UACA,CAAC,CAAC,IAAF,GAAc;iBACd,CAAC,CAAC,KAAF,GAAc,KAAK,CAAC;QALT,CANb;;QAaA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACZ,CAAC,CAAC,SAAF,GAAc;UACd,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,QAA5B,EAAsC,CAAC,CAAC,SAAxC;UACA,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;UACA,CAAC,CAAC,SAAF,GAAe;iBACf,CAAC,CAAC,KAAF,GAAc,KAAK,CAAC;QALR;MAbd,CAxHF;;MA6IA,CAAC,KAAK,CAAC,eAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBAAqB,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,IAA5B,EAAkC,GAAlC;QAArB,CAAF,CAAhB;;QAEA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,CAAC,CAAC,SAAF,GAAe;UACf,CAAC,CAAC,SAAF,GAAkB;iBAClB,CAAC,CAAC,KAAF,GAAkB,KAAK,CAAC;QAHV,CAFhB;;QAOA,CAAC,MAAM,CAAC,EAAR,CAAA,EAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACX,CAAC,CAAC,SAAF,GAAkB;UAClB,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;UACA,CAAC,CAAC,IAAF,GAAkB;iBAClB,CAAC,CAAC,KAAF,GAAkB,KAAK,CAAC;QAJb,CAPb;;QAaA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACZ,CAAC,CAAC,SAAF,GAAe;UACf,CAAC,CAAC,SAAF,GAAkB;iBAClB,CAAC,CAAC,KAAF,GAAkB,KAAK,CAAC;QAHZ;MAbd,CA/IF;;MAkKA,CAAC,KAAK,CAAC,SAAP,CAAA,EAEE,CAAA;;QAAA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,IAAG,CAAC,CAAC,SAAS,CAAC,MAAZ,GAAqB,CAAxB;mBACE,CAAC,CAAC,SAAF,IAAe,IADjB;WAAA,MAAA;YAGE,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;mBACA,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC,eAJlB;;QADc,CAAhB;;QAOA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,IAAG,GAAA,KAAO,CAAC,CAAC,SAAZ;YACE,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;mBACA,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC,eAFlB;WAAA,MAAA;mBAIE,CAAC,CAAC,SAAF,IAAe,IAJjB;;QADc,CAPhB;;QAcA,CAAC,MAAM,CAAC,EAAR,CAAA,EAAa,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACX,IAAG,CAAC,CAAC,SAAS,CAAC,MAAZ,GAAqB,CAAxB;mBACE,CAAC,CAAC,SAAF,IAAe,IADjB;WAAA,MAAA;YAGE,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;YACA,CAAC,CAAC,IAAF,GAAU;mBACV,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC,KALlB;;QADW,CAdb;;QAsBA,CAAC,MAAM,CAAC,KAAR,CAAA,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;UACd,IAAG,CAAC,CAAC,SAAS,CAAC,MAAZ,GAAqB,CAAxB;mBACE,CAAC,CAAC,SAAF,IAAe,IADjB;WAAA,MAAA;YAGE,IAAA,CAAK,MAAL,EAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAI,CAAC,SAA5B,EAAuC,CAAC,CAAC,SAAzC;YACA,CAAC,CAAC,UAAF,GAAe;mBACf,CAAC,CAAC,KAAF,GAAc,KAAK,CAAC,OALtB;;QADc,CAtBhB;;QA8BA,CAAC,MAAM,CAAC,GAAR,CAAA,EAAc,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAA,GAAA;iBACZ,CAAC,CAAC,SAAF,IAAe;QADH;MA9Bd;IApKF,EA7DJ;;AAmQE,WAAO;EApQA;;EAuQT,MAAM,CAAC,OAAP,GAAiB,CAAE,KAAF,EAAS,MAAT,EAAiB,IAAjB,EAAuB,MAAvB;AA1TjB",
  "sourcesContent": [
    "'use strict'\n\n\nEventEmitter = require('eventemitter3')\n{ isa\n  validate\n  type_of }               = ( new ( require 'intertype' ).Intertype() ).export()\n\nState =\n  data:                   'state-data'\n  cdata:                  'state-cdata'\n  tagBegin:               'state-tag-begin'\n  tag_name:               'state-tag-name'\n  tagEnd:                 'state-tag-end'\n  atr_name_start:         'state-atr-name-start'\n  atr_name:               'state-atr-name'\n  atr_name_end:           'state-atr-name-end'\n  atr_value_begin:        'state-atr-value-begin'\n  atr_value:              'state-atr-value'\n\nAction =\n  lt:                     'action-lt'\n  gt:                     'action-gt'\n  space:                  'action-space'\n  equal:                  'action-equal'\n  quote:                  'action-quote'\n  slash:                  'action-slash'\n  chr:                    'action-chr'\n  error:                  'action-error'\n\nType =\n  text:                   'text'\n  openTag:                'open'\n  closeTag:               'close'\n  atr_name:               'atr-name'\n  atr_value:              'atr-value'\n  noop:                   'noop'\n\nactions_by_chrs =\n  ' ':                    Action.space\n  '\\t':                   Action.space\n  '\\n':                   Action.space\n  '\\r':                   Action.space\n  '<':                    Action.lt\n  '>':                    Action.gt\n  '\"':                    Action.quote\n  \"'\":                    Action.quote\n  '=':                    Action.equal\n  '/':                    Action.slash\n\n#-----------------------------------------------------------------------------------------------------------\ncreate = ( settings, handler ) ->\n  switch arity = arguments.length\n    when 0 then null\n    when 1 then [ settings, handler, ] = [ null, settings, ]\n    when 2 then null\n    else throw new Error \"^55563^ expected 1 or 2 arguments, got #{arity}\"\n  [ settings, handler, ] = [ handler, null, ] unless isa.function handler\n  ### TAINT validate.xmllexer_settings settings ? {} ###\n  ### TAINT validate.function handler ###\n  settings          = { { include_specials: false, }..., settings..., }\n  lexer             = new EventEmitter()\n\n  #---------------------------------------------------------------------------------------------------------\n  # Registers\n  #---------------------------------------------------------------------------------------------------------\n  ρ =\n    state:          State.data\n    data:           ''\n    tag_name:       ''\n    attr_name:      ''\n    atr_value:      ''\n    is_closing:     false\n    prv_quote:      ''\n\n  #---------------------------------------------------------------------------------------------------------\n  step = ( src, idx, chr ) =>\n    if settings.debug then console.log ρ.state, chr\n    actions = lexer.stateMachine[ ρ.state ]\n    action  = actions[ actions_by_chrs[ chr ] ? Action.chr ] ? actions[ Action.error ] ? actions[ Action.chr ]\n    action src, idx, chr\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.write = ( src ) =>\n    for idx in [ 0 ... src.length ]\n      step src, idx, src[ idx ]\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lexer.flush = =>\n\n  #---------------------------------------------------------------------------------------------------------\n  emit = ( ref, src, idx, type, value ) =>\n    # sigil = null\n    # # tags like: '?xml', '!DOCTYPE', comments\n    unless settings.include_specials\n      return null if ρ.tag_name[ 0 ] in '!?'\n      return null if type is Type.noop\n    # switch sigil = ρ.tag_name[ 0 ]\n    #   when '?' then type = ''\n    #   when '!' then type = 'declaration'\n    # event.sigil = sigil if sigil?\n    event = { ref, type, value }\n    registers = {}\n    for k, v of ρ\n      registers[ k ] = v unless v in [ undefined, '', false, ]\n    if handler? then  handler { type, value, idx, ρ: registers, ref, }\n    else              lexer.emit 'data', { type, value, }\n\n  lexer.stateMachine =\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.data]:\n      #.....................................................................................................\n      [Action.lt]: ( src, idx, chr ) =>\n        if ρ.data.trim().length > 0\n          emit '^1^', src, idx, Type.text, ρ.data\n        ρ.tag_name    = ''\n        ρ.is_closing  = false\n        ρ.state       = State.tagBegin\n      #.....................................................................................................\n      [Action.chr]: ( ( src, idx, chr ) => ρ.data += chr )\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.cdata]:\n      #.....................................................................................................\n      [Action.chr]: ( src, idx, chr ) =>\n        ρ.data += chr\n        if ( ( ρ.data.substr -3 ) is ']]>' )\n          emit '^2^', src, idx, Type.text, ρ.data.slice 0, -3\n          ρ.data  = ''\n          ρ.state = State.data\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.tagBegin]:\n      #.....................................................................................................\n      [Action.space]: ( ( src, idx, chr ) => emit '^3^', src, idx, Type.noop, chr )\n      #.....................................................................................................\n      [Action.chr]: ( src, idx, chr ) =>\n        ρ.tag_name = chr\n        ρ.state   = State.tag_name\n      #.....................................................................................................\n      [Action.slash]: ( src, idx, chr ) =>\n        ρ.tag_name   = ''\n        ρ.is_closing = true\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.tag_name]:\n      #.....................................................................................................\n      [Action.space]: ( src, idx, chr ) =>\n        if ρ.is_closing\n          ρ.state = State.tagEnd\n        else\n          ρ.state = State.atr_name_start\n          emit '^4^', src, idx, Type.openTag, ρ.tag_name\n      #.....................................................................................................\n      [Action.gt]: ( src, idx, chr ) =>\n        if ρ.is_closing\n          emit '^5^', src, idx, Type.closeTag, ρ.tag_name\n        else\n          emit '^6^', src, idx, Type.openTag, ρ.tag_name\n        ρ.data  = '';\n        ρ.state = State.data;\n      #.....................................................................................................\n      [Action.slash]: ( src, idx, chr ) =>\n        ρ.state = State.tagEnd\n        emit '^7^', src, idx, Type.openTag, ρ.tag_name\n      #.....................................................................................................\n      [Action.chr]: ( src, idx, chr ) =>\n        ρ.tag_name += chr\n        if ρ.tag_name is '![CDATA['\n          ρ.state   = State.cdata\n          ρ.data    = ''\n          ρ.tag_name = ''\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.tagEnd]:\n      #.....................................................................................................\n      [Action.gt]: ( src, idx, chr ) =>\n        emit '^8^', src, idx, Type.closeTag, ρ.tag_name\n        ρ.data  = ''\n        ρ.state = State.data\n      #.....................................................................................................\n      [Action.chr]: ( ( src, idx, chr ) => emit '^9^', src, idx, Type.noop, chr )\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.atr_name_start]:\n      #.....................................................................................................\n      [Action.chr]: ( src, idx, chr ) =>\n        ρ.attr_name  = chr\n        ρ.state     = State.atr_name\n      #.....................................................................................................\n      [Action.gt]: ( src, idx, chr ) =>\n        ρ.data = ''\n        ρ.state = State.data\n      #.....................................................................................................\n      [Action.space]: ( ( src, idx, chr ) => emit '^10^', src, idx, Type.noop, chr )\n      #.....................................................................................................\n      [Action.slash]: ( src, idx, chr ) =>\n        ρ.is_closing = true\n        ρ.state     = State.tagEnd\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.atr_name]:\n      #.....................................................................................................\n      [Action.space]: ( src, idx, chr ) =>\n        ρ.state = State.atr_name_end\n      #.....................................................................................................\n      [Action.equal]: ( src, idx, chr ) =>\n        emit '^11^', src, idx, Type.atr_name, ρ.attr_name\n        ρ.state = State.atr_value_begin\n      #.....................................................................................................\n      [Action.gt]: ( src, idx, chr ) =>\n        ρ.atr_value = ''\n        emit '^12^', src, idx, Type.atr_name, ρ.attr_name\n        emit '^13^', src, idx, Type.atr_value, ρ.atr_value\n        ρ.data      = ''\n        ρ.state     = State.data\n      #.....................................................................................................\n      [Action.slash]: ( src, idx, chr ) =>\n        ρ.is_closing = true\n        ρ.atr_value = ''\n        emit '^14^', src, idx, Type.atr_name, ρ.attr_name\n        emit '^15^', src, idx, Type.atr_value, ρ.atr_value\n        ρ.state = State.tagEnd\n      #.....................................................................................................\n      [Action.chr]: ( src, idx, chr ) =>\n        ρ.attr_name += chr\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.atr_name_end]:\n      #.....................................................................................................\n      [Action.space]: ( ( src, idx, chr ) => emit '^16^', src, idx, Type.noop, chr )\n      #.....................................................................................................\n      [Action.equal]: ( src, idx, chr ) =>\n        emit '^17^', src, idx, Type.atr_name, ρ.attr_name\n        ρ.state = State.atr_value_begin\n      #.....................................................................................................\n      [Action.gt]: ( src, idx, chr ) =>\n        ρ.atr_value = ''\n        emit '^18^', src, idx, Type.atr_name, ρ.attr_name\n        emit '^19^', src, idx, Type.atr_value, ρ.atr_value\n        ρ.data      = ''\n        ρ.state     = State.data\n      #.....................................................................................................\n      [Action.chr]: ( src, idx, chr ) =>\n        ρ.atr_value = ''\n        emit '^20^', src, idx, Type.atr_name, ρ.attr_name\n        emit '^21^', src, idx, Type.atr_value, ρ.atr_value\n        ρ.attr_name  = chr\n        ρ.state     = State.atr_name\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.atr_value_begin]:\n      #.....................................................................................................\n      [Action.space]: ( ( src, idx, chr ) => emit '^22^', src, idx, Type.noop, chr )\n      #.....................................................................................................\n      [Action.quote]: ( src, idx, chr ) =>\n        ρ.prv_quote  = chr\n        ρ.atr_value     = ''\n        ρ.state         = State.atr_value\n      #.....................................................................................................\n      [Action.gt]: ( src, idx, chr ) =>\n        ρ.atr_value     = ''\n        emit '^23^', src, idx, Type.atr_value, ρ.atr_value\n        ρ.data          = ''\n        ρ.state         = State.data\n      #.....................................................................................................\n      [Action.chr]: ( src, idx, chr ) =>\n        ρ.prv_quote  = ''\n        ρ.atr_value     = chr\n        ρ.state         = State.atr_value\n\n    #-------------------------------------------------------------------------------------------------------\n    [State.atr_value]:\n      #.....................................................................................................\n      [Action.space]: ( src, idx, chr ) =>\n        if ρ.prv_quote.length > 0\n          ρ.atr_value += chr\n        else\n          emit '^24^', src, idx, Type.atr_value, ρ.atr_value\n          ρ.state = State.atr_name_start\n      #.....................................................................................................\n      [Action.quote]: ( src, idx, chr ) =>\n        if chr is ρ.prv_quote\n          emit '^25^', src, idx, Type.atr_value, ρ.atr_value\n          ρ.state = State.atr_name_start\n        else\n          ρ.atr_value += chr\n      #.....................................................................................................\n      [Action.gt]: ( src, idx, chr ) =>\n        if ρ.prv_quote.length > 0\n          ρ.atr_value += chr\n        else\n          emit '^26^', src, idx, Type.atr_value, ρ.atr_value\n          ρ.data  = ''\n          ρ.state = State.data\n      #.....................................................................................................\n      [Action.slash]: ( src, idx, chr ) =>\n        if ρ.prv_quote.length > 0\n          ρ.atr_value += chr\n        else\n          emit '^27^', src, idx, Type.atr_value, ρ.atr_value\n          ρ.is_closing = true\n          ρ.state     = State.tagEnd\n      #.....................................................................................................\n      [Action.chr]: ( src, idx, chr ) =>\n        ρ.atr_value += chr\n\n  #---------------------------------------------------------------------------------------------------------\n  return lexer\n\n\nmodule.exports = { State, Action, Type, create, }\n\n\n\n\n"
  ]
}